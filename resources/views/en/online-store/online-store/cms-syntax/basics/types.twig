<aside class="plenty-anchor-navbar">
    <div class="sticky-wrapper">
        <div class="sticky-container" data-fn="sticky-container" data-fn-options="{ onLoadHashScrollToLink: true }">
            
        </div>
    </div>
</aside>

<main id="main">
    <h1>Types</h1><div class="sect1">
<h2 id="_general_information_about_types">General information about types</h2>
<div class="sectionbody">
<div class="paragraph">
<p>You can use different types of variables in plentymarkets. The following primitive types are currently supported in plentymarkets.</p>
</div>
</div>
</div><div class="sect1">
<h2 id="_boolean">Boolean</h2>
<div class="sectionbody">
<div class="paragraph">
<p>This is the most basic type. A Boolean expression is a logical value that can be either <strong>TRUE</strong> or <strong>FALSE</strong>.</p>
</div>
<div class="paragraph">
<p>A Boolean value is specified using the keywords <strong>TRUE</strong> and <strong>FALSE</strong>. It is not case-sensitive.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-plenty" data-lang="plenty">&#123;&#37; $_foo = true; &#37;&#125;

{# assigns the value TRUE to $_foo #}</code></pre>
</div>
</div>
<div class="paragraph">
<p>A Boolean is returned by an operator and passed to a control structure.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-plenty" data-lang="plenty">&#123;&#37; if $_a == 5 &#37;&#125;
	$_a is 5
&#123;&#37; endif &#37;&#125;

{# == is an operator that checks for validity and returns a boolean result #}</code></pre>
</div>
</div>
</div>
</div><div class="sect1">
<h2 id="_integer">Integer</h2>
<div class="sectionbody">
<div class="paragraph">
<p>An integer is a value within the range Z = {…​, -2, -1, 0, 1, 2, …​}.</p>
</div>
<div class="paragraph">
<p>Integers can be signed or unsigned. This is optional for positive numbers, negative numbers must be signed.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-plenty" data-lang="plenty">&#123;&#37; $_a = 1234; &#37;&#125;
{# $_a contains the number 1234 #}

&#123;&#37; $_b = +1234; &#37;&#125;
{# $_b contains the number 1234 #}

&#123;&#37; $_c = -123; &#37;&#125;
{# $_c contains the number -123 #}</code></pre>
</div>
</div>
</div>
</div><div class="sect1">
<h2 id="_float_double">Float / double</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Floats always require a decimal point (.). Thousands separators can not be used.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-plenty" data-lang="plenty">&#123;&#37; $_a = 1.234; &#37;&#125;</code></pre>
</div>
</div>
</div>
</div><div class="sect1">
<h2 id="_string">String</h2>
<div class="sectionbody">
<div class="paragraph">
<p>A string is defined as a string of characters. Strings must be enclosed in single (') or double (") quotes. These quotes can not be used within the actual string.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-plenty" data-lang="plenty">&#123;&#37; $_a = "this is a string"; &#37;&#125;

&#123;&#37; if $_a == "this is a string" &#37;&#125;
	$_a contains the value: this is a string
&#123;&#37; endif &#37;&#125;</code></pre>
</div>
</div>
</div>
</div><div class="sect1">
<h2 id="_array">Array</h2>
<div class="sectionbody">
<div class="paragraph">
<p>An array is a list of values assigned to a key (position 0-n). The CMS syntax supports lists of one dimension (value1, value2, value3, …​, value100). A list can consist of different types. A maximum of 100 elements is permitted per array.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-plenty" data-lang="plenty">&#123;&#37; $_a = [127, 9.49, "plenty"]; &#37;&#125;</code></pre>
</div>
</div>
</div>
</div><div class="sect1">
<h2 id="_associative_array">Associative array</h2>
<div class="sectionbody">
<div class="paragraph">
<p>An associative array is a list of values assigned to an individual key. The CMS syntax supports lists of multiple dimensions. The key always has to be a <strong>string</strong>. The individual values can be different types.</p>
</div>
<div class="admonitionblock tip">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Tip</div>
</td>
<td class="content">
<div class="title">Technical limitation</div>
<div class="paragraph">
<p>Theoretically, there is no limit to the number of nesting levels and elements. However, unusually large constructions can cause errors to occur when displaying or translating data. As such, carefully test your associative arrays and make changes if you notice any unintended behavior.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-plenty" data-lang="plenty">&#123;&#37; $_a = {"plentymarkets":"Welcome to plentymarkets", "name":"John Doe"} &#37;&#125;
$_a["plentymarkets"] $_a["name"].

# Welcome to plentymarkets, John Doe.</code></pre>
</div>
</div>
</div>
</div><div class="sect1">
<h2 id="_null">NULL</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The value <strong>NULL</strong> represents a variable without a value. <strong>NULL</strong> is the only possible value of the type NULL.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-plenty" data-lang="plenty">&#123;&#37; $_a = NULL; &#37;&#125;</code></pre>
</div>
</div>
</div>
</div><div class="sect1">
<h2 id="_object">Object</h2>
<div class="sectionbody">
<div class="paragraph">
<p>An object is a container for other data.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-plenty" data-lang="plenty">&#123;&#37; $_customerAddress = GetCheckoutCustomerInvoiceAddress() &#37;&#125;
$_customerAddress-&gt;Company&lt;br/&gt;
$_customerAddress-&gt;FirstName $_customerAddress-&gt;LastName&lt;br/&gt;
$_customerAddress-&gt;Street $_customerAddress-&gt;HouseNo&lt;br/&gt;
$_customerAddress-&gt;ZIP $_customerAddress-&gt;City&lt;br/&gt;
$_customerAddress-&gt;Country</code></pre>
</div>
</div>
</div>
</div>
</main>