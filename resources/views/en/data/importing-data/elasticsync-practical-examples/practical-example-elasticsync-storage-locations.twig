<aside class="plenty-anchor-navbar">
    <div class="sticky-wrapper">
        <div class="sticky-container" data-fn="sticky-container" data-fn-options="{ onLoadHashScrollToLink: true }">
            <div id="toc" class="toc">
<div id="toctitle">Table of Contents</div>
<ul class="sectlevel1">
<li><a href="#_exporting_data"><span>1.</span><span> Exporting data</span></a>
<ul class="sectlevel2">
<li><a href="#_creating_and_assigning_data_fields_with_the_formatdesigner"><span>1.1.</span><span> Creating and assigning data fields with the FormatDesigner</span></a></li>
<li><a href="#_exporting_data_with_the_elastic_export"><span>1.2.</span><span> Exporting data with the Elastic Export</span></a>
<ul class="sectlevel3">
<li><a href="#_creating_a_new_export"><span>1.2.1.</span><span> Creating a new export</span></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#_processing_data"><span>2.</span><span> Processing data</span></a></li>
<li><a href="#_importing_data_with_elasticsync"><span>3.</span><span> Importing data with ElasticSync</span></a>
<ul class="sectlevel2">
<li><a href="#_matching"><span>3.1.</span><span> Matching</span></a></li>
<li><a href="#_import_options"><span>3.2.</span><span> Import options</span></a></li>
<li><a href="#_creating_a_mapping"><span>3.3.</span><span> Creating a mapping</span></a></li>
<li><a href="#_assigning_data_fields"><span>3.4.</span><span> Assigning data fields</span></a></li>
<li><a href="#_testing_and_running_a_sync"><span>3.5.</span><span> Testing and running a sync</span></a></li>
<li><a href="#_result_in_the_structure_manager"><span>3.6.</span><span> Result in the structure manager</span></a></li>
</ul>
</li>
</ul>
</div>
        </div>
    </div>
</aside>

<main id="main">
    <h1>Adjusting storage locations</h1><div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>This page offers Best Practices for importing and exporting data. Before you use these Best Practices in order to exchange data, familiarise yourself with the functions of the FormatDesigner, the Elastic Export and ElasticSync. To do so, read the pages <a href="https://knowledge.plentymarkets.com/en/data/exporting-data/FormatDesigner">Creating data formats with FormatDesigner</a>, <a href="https://knowledge.plentymarkets.com/en/data/exporting-data/elastic-export">Elastic Export</a> and <a href="https://knowledge.plentymarkets.com/en/data/importing-data/ElasticSync">Importing data with ElasticSync</a>.</p>
</div>
</div>
</div><div class="sect1">
<h2 id="_exporting_data">1. Exporting data</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In the first section of the Best Practices we will focus on the data export. First, we will show you how to create and assign data fields by using the FormatDesigner.</p>
</div>
<div class="sect2">
<h3 id="_creating_and_assigning_data_fields_with_the_formatdesigner">1.1. Creating and assigning data fields with the FormatDesigner</h3>
<div class="paragraph">
<p>In the menu under <strong>Data » FormatDesigner</strong> you can create data formats for the export. In order to use it, the FormatDesigner plugin has to be installed. In the following section we exemplarily create a template for storage location and thus for the data format WarehouseLocation. It contains all data fields that directly concern the storage location.</p>
</div>
<table id="table-settings-data-fields" class="tableblock frame-all grid-all stretch">
<caption class="title">Table 1. Data fields WarehouseLocation</caption>
<colgroup>
<col style="width: 25%;">
<col style="width: 75%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Setting</th>
<th class="tableblock halign-left valign-top">Explanation</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>ID</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">The ID of a storage location is unique, as a new one is assigned to every storage location.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>LevelID</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">ID of the level on which the storage location is located.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Label</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Here you can enter a name for the storage location label.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Purpose</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Purpose of the storage location, e.g. removal from storage</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Status</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Status of the storage location, e.g. active, inactive</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Position</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Position of the storage location (distance)</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Full label</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Name of the storage location</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Type</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Type of the storage location, e.g. small, medium, large</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Notes</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Here you can make notes regarding the storage location.</p></td>
</tr>
</tbody>
</table>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/data-fields-warehouse-structure.png" alt="data fields warehouse structure">
</div>
<div class="title">Figure 1. Data fields in the warehouse structure</div>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/data-fields-in-the-structure-manager.png" alt="data fields in the structure manager">
</div>
<div class="title">Figure 2. Data fields in the structure manager</div>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/storagelocation-data-fields-structure-manager.png" alt="storagelocation data fields structure manager">
</div>
<div class="title">Figure 3. StorageLocation data fields in the structure manager</div>
</div>
<div class="paragraph">
<p>In our example we use the FormatDesigner to create a sync of the type Warehouse and name it warehouseLocation.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/new-template.png" alt="new template">
</div>
<div class="title">Figure 4. New template</div>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/data-fields-warehouselocation.png" alt="data fields warehouselocation">
</div>
<div class="title">Figure 5. Data fields WarehouseLocation</div>
</div>
<div class="paragraph">
<p>By clicking on the data fields they are added to the template.<br>
<strong>Save</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) the settings.</p>
</div>
<div class="paragraph">
<p>This leads to the following assignment in the FormatDesigner.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/assignment-data-fields.png" alt="assignment data fields">
</div>
<div class="title">Figure 6. Assigning the data fields</div>
</div>
</div>
<div class="sect2">
<h3 id="_exporting_data_with_the_elastic_export">1.2. Exporting data with the Elastic Export</h3>
<div class="paragraph">
<p>The Elastic Export allows you to export the templates that have been created in the FormatDesigner into the CSV format. If no Elastic Export can be created the plugin on plentyMarketplace has to be installed first.</p>
</div>
<div class="sect3">
<h4 id="_creating_a_new_export">1.2.1. Creating a new export</h4>
<div class="paragraph">
<p>In the menu under <strong>Data » Elastic export</strong> you can create a new export.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Go to <strong>Data » Elastic export</strong>.<br>
→ The overview opens.</p>
</li>
<li>
<p>Click on <strong>New export</strong>.</p>
</li>
<li>
<p>Carry out the settings. Pay attention to the explanations given in <a href="#table-settings-new-export">Table 2</a>.</p>
</li>
<li>
<p><strong>Save</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) the settings.</p>
</li>
<li>
<p>Refresh the token once again.</p>
</li>
<li>
<p>Click on <strong>Download file</strong> (<span class="icon purple"><i class="fa fa-download  "></i></span>).<br>
→ The created CSV file can be edited in a spreadsheet programme.</p>
</li>
<li>
<p>Once the data have been edited the file has to be saved under a new name.</p>
</li>
</ol>
</div>
<table id="table-settings-new-export" class="tableblock frame-all grid-all stretch">
<caption class="title">Table 2. Creating a new export</caption>
<colgroup>
<col style="width: 25%;">
<col style="width: 75%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Setting</th>
<th class="tableblock halign-left valign-top">Explanation</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Name</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Enter a name. The export format is listed by this name in the overview within the <strong>Exports</strong> tab.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Type</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Select the data type that should be exported from the drop-down list. Here we select the type warehouse.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Format</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Select a format for the export from the drop-down list. Only formats that were installed from the plentyMarketplace are available.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Limit</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Enter a number. It is limited to 10,000 data records.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Provisioning</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Select <strong>URL</strong>, <strong>FTP</strong> or <strong>Admin area</strong>. Different settings will appear depending on which option is selected here. Here we select the option <strong>URL</strong>.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Token</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">If you have selected the option <strong>URL</strong> under <strong>Provisioning</strong>, then click on <strong>Generate token</strong>. The token is entered automatically.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Filter</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">For the filter we select the option warehouse.</p></td>
</tr>
</tbody>
</table>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/the-form.png" alt="the form">
</div>
<div class="title">Figure 7. The form</div>
</div>
<div class="paragraph">
<p>In the table the data look as follows.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/the-data.png" alt="the data">
</div>
<div class="title">Figure 8. The data</div>
</div>
</div>
</div>
</div>
</div><div class="sect1">
<h2 id="_processing_data">2. Processing data</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In a next step the data are processed. The CSV file that has been created per Elastic export can be opened in a spreadsheet programme.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/csv-file-data-unprocessed.png" alt="csv file data unprocessed">
</div>
<div class="title">Figure 9. CSV file data unprocessed</div>
</div>
<div class="paragraph">
<p>The data fields level, label, purpose, status, position, type and notes can be imported.<br></p>
</div>
<div class="paragraph">
<p>In the given example we changed the values of the position and the notes.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/csv-file-data-processed.png" alt="csv file data processed">
</div>
<div class="title">Figure 10. CSV file data processed</div>
</div>
</div>
</div><div class="sect1">
<h2 id="_importing_data_with_elasticsync">3. Importing data with ElasticSync</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In the next section we will deal with importing data with ElasticSync. We will exemplarily create a sync of the type Warehouse.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Go to <strong>Data » Import</strong>.<br>
→ The overview opens.</p>
</li>
<li>
<p>Click on <strong>Add sync</strong> (<span class="icon green"><i class="fa fa-plus-square  "></i></span>).<br>
→ The overview opens.</p>
</li>
<li>
<p>Carry out the settings. Pay attention to the explanations given in <a href="#table-create-sync">Table 3</a>.</p>
</li>
<li>
<p><strong>Save</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) the settings.<br>
→ The sync has been saved.</p>
</li>
</ol>
</div>
<table id="table-create-sync" class="tableblock frame-all grid-all stretch">
<caption class="title">Table 3. Creating a sync</caption>
<colgroup>
<col style="width: 50%;">
<col style="width: 50%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Setting</th>
<th class="tableblock halign-left valign-top">Explanation</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Name</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Name of the sync</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Type</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Select which data fields can be assigned to the import data. In this example we select the type warehouse.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Data type</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">So far the only available data type is CSV.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Separator</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">The separator separates the different data types. In this example we use the separator semicolon.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Source</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">The CSV file is stored in the source. In this example we use the data upload which will soon be available as own option field.</p></td>
</tr>
</tbody>
</table>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/type-selection.png" alt="type selection">
</div>
<div class="title">Figure 11. Type selection</div>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/separator.png" alt="separator">
</div>
<div class="title">Figure 12. Separator</div>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/source.png" alt="source">
</div>
<div class="title">Figure 13. Source</div>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/overview-basic-data.png" alt="overview basic data">
</div>
<div class="title">Figure 14. Overview basic data</div>
</div>
<div class="paragraph">
<p>The file upload is next, for which we use a local CSV file. In this case we select HTTP as source and data upload as HTTP option.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Click on <strong>Select file</strong> to open the file manager.</p>
</li>
<li>
<p>Click on <strong>Upload file</strong> (<span class="icon purple"><i class="fa fa-upload  "></i></span>) to provide a new file.</p>
</li>
<li>
<p>Select the CSV file from the file manager.</p>
</li>
<li>
<p>Click on <strong>Open</strong>.<br>
→ The file is saved in the list under My files.</p>
</li>
<li>
<p>Tick the box and select the file.<br>
→ The file is loaded into the source directory.</p>
</li>
<li>
<p><strong>Save</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) the settings.</p>
</li>
</ol>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/file-upload.png" alt="file upload">
</div>
<div class="title">Figure 15. File upload</div>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/select-file.png" alt="select file">
</div>
<div class="title">Figure 16. Select file</div>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/load-file-in-source-directory.png" alt="load file in source directory">
</div>
<div class="title">Figure 17. Load file in source directory</div>
</div>
<div class="sect2">
<h3 id="_matching">3.1. Matching</h3>
<div class="paragraph">
<p>For the matching it is necessary to determine and assign the data in order to figure out which data of the file corresponds to which data in plentymarkets.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/matching.png" alt="matching">
</div>
<div class="title">Figure 18. Matching</div>
</div>
<div class="paragraph">
<p>With the matching you determine by which data is examined whether a data record already exists.<br>
In this example the WarehouseLocation ID is used for the matching.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/select-matching.png" alt="select matching">
</div>
<div class="title">Figure 19. Select matching</div>
</div>
</div>
<div class="sect2">
<h3 id="_import_options">3.2. Import options</h3>
<div class="paragraph">
<p>Here is determined whether only new data, only existing data or new as well as existing data should be imported.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/import-options.png" alt="import options">
</div>
<div class="title">Figure 20. Import options</div>
</div>
<div class="paragraph">
<p><strong>Save</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) the settings.</p>
</div>
</div>
<div class="sect2">
<h3 id="_creating_a_mapping">3.3. Creating a mapping</h3>
<div class="paragraph">
<p>In the mapping the imported data are assigned to the plentymarkets data fields.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/mapping.png" alt="mapping">
</div>
<div class="title">Figure 21. Mapping</div>
</div>
<div class="paragraph">
<p>At first a mapping needs to be created.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Click on the field <strong>Mapping</strong>.<br>
→ The overview opens.</p>
</li>
<li>
<p>Click on <strong>Add mapping</strong> (<span class="icon green"><i class="fa fa-plus-square  "></i></span>).</p>
</li>
<li>
<p>Select a name.</p>
</li>
<li>
<p><strong>Save</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) the settings.<br>
→ The mapping has been created.</p>
</li>
</ol>
</div>
</div>
<div class="sect2">
<h3 id="_assigning_data_fields">3.4. Assigning data fields</h3>
<div class="paragraph">
<p>The data that is to be imported has to be assigned to the plentymarkets data fields.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Click on <strong>+Field</strong>.<br>
→ The overview of the import data and the plentymarkets data fields opens.</p>
</li>
<li>
<p>Click in the field <strong>Target</strong> and select the corresponding data field.</p>
</li>
<li>
<p>Click on <strong>Activate row</strong> in order to activate the import data.</p>
</li>
<li>
<p><strong>Save</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) the settings.</p>
</li>
</ol>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/assign-data-fields.png" alt="assign data fields">
</div>
<div class="title">Figure 22. Assigning data fields</div>
</div>
<div class="paragraph">
<p>Click on <strong>Preview</strong> (<span class="icon blue"><i class="fa fa-eye  "></i></span>) in order to display the changes of the first rows.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/preview.png" alt="preview">
</div>
<div class="title">Figure 23. Preview</div>
</div>
</div>
<div class="sect2">
<h3 id="_testing_and_running_a_sync">3.5. Testing and running a sync</h3>
<div class="paragraph">
<p>By clicking on <strong>Test sync</strong> it is checked whether the inputs lead to a successful process of the sync.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/test-sync.png" alt="test sync">
</div>
<div class="title">Figure 24. Test sync</div>
</div>
<div class="paragraph">
<p>By clicking on <strong>Run sync</strong> the sync is started and loaded into the queue.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/run-sync.png" alt="run sync">
</div>
<div class="title">Figure 25. Run sync</div>
</div>
</div>
<div class="sect2">
<h3 id="_result_in_the_structure_manager">3.6. Result in the structure manager</h3>
<div class="paragraph">
<p>In the structure manager the result is displayed as follows.</p>
</div>
<div id="image-importing-data" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/data/assets/display-in-structure-manager.png" alt="display in structure manager">
</div>
<div class="title">Figure 26. Display in the structure manager</div>
</div>
</div>
</div>
</div>
</main>