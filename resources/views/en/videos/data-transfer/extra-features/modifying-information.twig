<aside class="plenty-anchor-navbar">
    <div class="sticky-wrapper">
        <div class="sticky-container" data-fn="sticky-container" data-fn-options="{ onLoadHashScrollToLink: true }">
            
        </div>
    </div>
</aside>

<main id="main">
    <h1>Modifying the information in your sync</h1><table class="tableblock frame-all grid-none stretch">
<colgroup>
<col style="width: 66.6666%;">
<col style="width: 33.3334%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">You want to import a file into plentymarkets, but first you need to modify some of its information? No need to do it by hand! You can use ElasticSync’s "Regular Expression" function to modify the data.<br>
<strong><em>Note:</em></strong> The term <strong>ElasticSync</strong> is outdated and has been replaced by <strong>import</strong>.</p></td>
<td class="tableblock halign-left valign-top"></td>
</tr>
</tbody>
</table><div class="videoblock">
<div class="content">
<iframe src="https://player.vimeo.com/video/329761682" frameborder="0" allowfullscreen=""></iframe>
</div>
</div><div class="openblock collapseBox">
<div class="title">Transcript</div>
<div class="content">
<div class="paragraph">
<p>You received a new file, chock-full of information!
But, wait a minute. The data isn’t quite right. Some of the information needs to be modified before you import it into plentymarkets.</p>
</div>
<div class="paragraph">
<p>Let me show you what I mean. Imagine you’ve got a spreadsheet filled with information about your customers.
One column contains a list of names, displayed as last name comma first name.</p>
</div>
<div class="paragraph">
<p>But before you import this data into plentymarkets, you want to switch the names around so that they read first name last name.
No problem! ElasticSync helps you get the job done.</p>
</div>
<div class="paragraph">
<p>This video builds on what you’ve already learned in our basic instructional video and looks at this option here, which lets you search for and manipulate data.</p>
</div>
<div class="paragraph">
<p>But just a quick word of warning. Regular expressions can be kind of tricky. They’ll be much easier to understand if you already have a basic grasp of programming languages or if you’re interested in learning a bit of code.
If that’s not really something you’re willing or able to do, then honestly, regular expressions might not be a function you want to use.
But if you’re up for a little challenge then I’ll teach you the basic idea and show you where to turn for additional support.</p>
</div>
<div class="paragraph">
<p>Okay, so essentially, just tell plentymarkets which column contains the data that you want to manipulate and which plentymarkets data field this corresponds to.
Then tell plentymarkets what the data looks like in your CSV file and how you want to change it around.</p>
</div>
<div class="paragraph">
<p>These two fields "search" and "replace" are really the only tricky part.
You’ll enter short codes, which instruct plentymarkets which data it should search for and how it should modify the data it’s found.</p>
</div>
<div class="paragraph">
<p>Let’s look at the search field first and break it down piece by piece.
Okay, so plentymarkets will search for a name like Doe comma John or in other words, it will search for some word comma some other word.
And that’s all this part of the code says here.</p>
</div>
<div class="paragraph">
<p>Look for any word, then a comma, a space and any other word.
And like bookends, you’ve also got code that represents the beginning of the search term and the end of the search term.</p>
</div>
<div class="paragraph">
<p>The "replace" field isn’t too difficult to understand either.
Just take a look at your search term and find each pair of parentheses. Each one gets a number …​ one …​ and two.
The "replace" field instructs plentymarkets to display the second one, leave a space, and then display the first one.</p>
</div>
<div class="paragraph">
<p>Ready to try your hand at another task?
Then let’s change the way a date is written from this to this.</p>
</div>
<div class="paragraph">
<p>Okay, so when searching for this date, plentymarkets will look for a number dot a number dot a number.
Start out by entering the code that represents the beginning of the search term.
Now this time, instead of searching for a word you’re going to search for a number - or a digit.</p>
</div>
<div class="paragraph">
<p>So, the logical thing to do would be to tell plentymarkets to search for a number dot a number dot a number.
And then finish it off with code to represent the end of the search term. But watch out. There are a few characters that have a special meaning.
Like you learned, a slash and caret mean the beginning of a search term and parentheses mean individual pieces of the search term.</p>
</div>
<div class="paragraph">
<p>Well, unfortunately, a period is another such character with a special meaning. But we don’t want to use its special meaning. We just want it to be a regular old dot.
And we can turn it into one by adding a backslash in front of it.</p>
</div>
<div class="paragraph">
<p>The replace field works just the same in this example as it did in the last one.
Each pair of parentheses gets a number and the replace field says to display the third one, then a dash, then the second one, a dash, and the first one.</p>
</div>
<div class="paragraph">
<p>Of course, these are just two examples of how you might use regular expressions for your business. But there are a tons of reference materials out there to help you decipher the code and test your search terms.
And as always, don’t hesitate to contact our support team or ask questions in the forum if you need a little bit of assistance.</p>
</div>
<div class="paragraph">
<p>Great job! You’ve learned how to search for and modify information in your file. Now you’re ready to import all of this data into plentymarkets!</p>
</div>
</div>
</div>
</main>