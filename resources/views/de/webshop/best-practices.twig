<aside class="plenty-anchor-navbar">
    <div class="sticky-wrapper">
        <div class="sticky-container" data-fn="sticky-container" data-fn-options="{ onLoadHashScrollToLink: true }">
            <div id="toc" class="toc">
<div id="toctitle">Inhalt</div>
<ul class="sectlevel1">
<li><a href="#updates"><span>1.</span><span> Ceres-Updates sicher testen</span></a>
<ul class="sectlevel2">
<li><a href="#_plugin_set_kopieren"><span>1.1.</span><span> Plugin-Set kopieren</span></a></li>
<li><a href="#_ceres_update_auf_die_plugin_set_kopie_aufspielen"><span>1.2.</span><span> Ceres Update auf die Plugin-Set Kopie aufspielen</span></a></li>
</ul>
</li>
<li><a href="#umstieg-von-callisto"><span>2.</span><span> Umstieg von Callisto auf Ceres</span></a>
<ul class="sectlevel2">
<li><a href="#_neues_plugin_set_anlegen"><span>2.1.</span><span> Neues Plugin-Set anlegen</span></a></li>
<li><a href="#_plugin_set_einrichten"><span>2.2.</span><span> Plugin-Set einrichten</span></a></li>
<li><a href="#_ceres_webshop_im_vorschaumodus_testen"><span>2.3.</span><span> Ceres Webshop im Vorschaumodus testen</span></a></li>
<li><a href="#_ceres_webshop_produktiv_schalten"><span>2.4.</span><span> Ceres Webshop produktiv schalten</span></a></li>
</ul>
</li>
<li><a href="#bp-ceres-EOL"><span>3.</span><span> Callisto EOL (End of Life) - Welchen Bestellvorgang nutze ich?</span></a>
<ul class="sectlevel2">
<li><a href="#_bestellvorgänge_in_callisto"><span>3.1.</span><span> Bestellvorgänge in Callisto</span></a></li>
<li><a href="#_welchen_bestellvorgang_nutze_ich"><span>3.2.</span><span> Welchen Bestellvorgang nutze ich?</span></a></li>
<li><a href="#_nächste_schritte"><span>3.3.</span><span> Nächste Schritte</span></a></li>
<li><a href="#_weiterführende_informationen"><span>3.4.</span><span> Weiterführende Informationen</span></a></li>
</ul>
</li>
<li><a href="#checkout"><span>4.</span><span> Ceres-Checkout in Callisto einrichten</span></a>
<ul class="sectlevel2">
<li><a href="#individueller-bestellvorgang"><span>4.1.</span><span> Ceres-Checkout für Callisto-Webshops mit individuellem Bestellvorgang</span></a>
<ul class="sectlevel3">
<li><a href="#_routen_verwalten"><span>4.1.1.</span><span> Routen verwalten</span></a></li>
<li><a href="#_bestellabwicklung_anpassen"><span>4.1.2.</span><span> Bestellabwicklung anpassen</span></a></li>
<li><a href="#_backlinks_setzen"><span>4.1.3.</span><span> Backlinks setzen</span></a></li>
<li><a href="#_rechtliche_angaben_anpassen"><span>4.1.4.</span><span> Rechtliche Angaben anpassen</span></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#filter"><span>5.</span><span> Filter einrichten</span></a>
<ul class="sectlevel2">
<li><a href="#_attribut_anlegen"><span>5.1.</span><span> Attribut anlegen</span></a></li>
<li><a href="#_attribut_mit_artikel_verknüpfen"><span>5.2.</span><span> Attribut mit Artikel verknüpfen</span></a></li>
<li><a href="#_facette_einrichten"><span>5.3.</span><span> Facette einrichten</span></a></li>
<li><a href="#_attributwerte_mit_facette_verknüpfen"><span>5.4.</span><span> Attributwerte mit Facette verknüpfen</span></a></li>
<li><a href="#_mandanten_mit_facette_verknüpfen"><span>5.5.</span><span> Mandanten mit Facette verknüpfen</span></a></li>
<li><a href="#_plugin_bereitstellen"><span>5.6.</span><span> Plugin bereitstellen</span></a></li>
</ul>
</li>
<li><a href="#bestellmerkmale"><span>6.</span><span> Bestellmerkmale einrichten</span></a>
<ul class="sectlevel2">
<li><a href="#_bestellmerkmal_anlegen"><span>6.1.</span><span> Bestellmerkmal anlegen</span></a></li>
<li><a href="#_bestellmerkmal_mit_artikel_verknüpfen"><span>6.2.</span><span> Bestellmerkmal mit Artikel verknüpfen</span></a></li>
<li><a href="#_plugin_bereitstellen_2"><span>6.3.</span><span> Plugin bereitstellen</span></a></li>
<li><a href="#_bestellmerkmal_als_checkbox_einrichten"><span>6.4.</span><span> Bestellmerkmal als Checkbox einrichten</span></a>
<ul class="sectlevel3">
<li><a href="#_merkmalgruppe_erstellen"><span>6.4.1.</span><span> Merkmalgruppe erstellen</span></a></li>
<li><a href="#_bestellmerkmal_anlegen_2"><span>6.4.2.</span><span> Bestellmerkmal anlegen</span></a></li>
<li><a href="#_bestellmerkmal_mit_artikel_verknüpfen_2"><span>6.4.3.</span><span> Bestellmerkmal mit Artikel verknüpfen</span></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#cross-selling"><span>7.</span><span> Cross-Selling einrichten</span></a>
<ul class="sectlevel2">
<li><a href="#_cross_selling_artikellisten_konfigurieren"><span>7.1.</span><span> Cross-Selling-Artikellisten konfigurieren</span></a></li>
<li><a href="#_cross_selling_artikellisten_im_webshop_anzeigen"><span>7.2.</span><span> Cross-Selling-Artikellisten im Webshop anzeigen</span></a></li>
</ul>
</li>
<li><a href="#weitere-cross-selling-listen"><span>8.</span><span> Weitere Cross-Selling Artikellisten anzeigen</span></a>
<ul class="sectlevel2">
<li><a href="#_context_klasse_erstellen"><span>8.1.</span><span> Context-Klasse erstellen</span></a></li>
<li><a href="#_singleitemview_twig_anpassen"><span>8.2.</span><span> SingleItemView.twig anpassen</span></a></li>
<li><a href="#_weitere_cross_selling_listen_einbauen"><span>8.3.</span><span> Weitere Cross-Selling-Listen einbauen</span></a></li>
</ul>
</li>
<li><a href="#eigenschaften-basket"><span>9.</span><span> Eigenschaften im Warenkorb und im Checkout ausgeben</span></a>
<ul class="sectlevel2">
<li><a href="#_basketlistitem_twig_anpassen"><span>9.1.</span><span> BasketListItem.twig anpassen</span></a></li>
<li><a href="#_basketitem_fields_json_anpassen"><span>9.2.</span><span> BasketItem.fields.json anpassen</span></a></li>
</ul>
</li>
<li><a href="#vat"><span>10.</span><span> Hinweise zur Senkung der Mehrwertsteuer (01.07.2020)</span></a>
<ul class="sectlevel2">
<li><a href="#_css_anpassungen"><span>10.1.</span><span> CSS-Anpassungen</span></a></li>
<li><a href="#_anpassungen_im_shopbuilder"><span>10.2.</span><span> Anpassungen im ShopBuilder</span></a>
<ul class="sectlevel3">
<li><a href="#_code_widgets_platzieren"><span>10.2.1.</span><span> Code-Widgets platzieren</span></a></li>
</ul>
</li>
<li><a href="#_anpassungen_an_ceres_templates"><span>10.3.</span><span> Anpassungen an Ceres-Templates</span></a>
<ul class="sectlevel3">
<li><a href="#_auftragshistorie_anpassen"><span>10.3.1.</span><span> Auftragshistorie anpassen</span></a></li>
<li><a href="#_standard_header_anpassen"><span>10.3.2.</span><span> Standard-Header anpassen</span></a></li>
<li><a href="#_eigenen_shopbuilder_header_anpassen"><span>10.3.3.</span><span> Eigenen ShopBuilder-Header anpassen</span></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#psi"><span>11.</span><span> Bessere Werte bei Google Page Speed Insights erzielen</span></a>
<ul class="sectlevel2">
<li><a href="#_live_modus_im_ceres_plugin_aktivieren"><span>11.1.</span><span> Live-Modus im Ceres-Plugin aktivieren</span></a></li>
<li><a href="#_bilder_widgets_optimal_einstellen"><span>11.2.</span><span> Bilder-Widgets optimal einstellen</span></a>
<ul class="sectlevel3">
<li><a href="#_moderne_bildformate_verwenden"><span>11.2.1.</span><span> Moderne Bildformate verwenden</span></a></li>
<li><a href="#_lazy_loading_aktivieren"><span>11.2.2.</span><span> Lazy Loading aktivieren</span></a></li>
</ul>
</li>
<li><a href="#_anzahl_der_widgets_reduzieren"><span>11.3.</span><span> Anzahl der Widgets reduzieren</span></a></li>
<li><a href="#_unsichtbaren_text_durch_eigene_schriftarten_vermeiden"><span>11.4.</span><span> Unsichtbaren Text durch eigene Schriftarten vermeiden</span></a></li>
<li><a href="#_shopbooster_aktivieren"><span>11.5.</span><span> ShopBooster aktivieren</span></a></li>
<li><a href="#_javascript_in_code_widgets_vermeiden"><span>11.6.</span><span> Javascript in Code-Widgets vermeiden</span></a></li>
<li><a href="#_plugins_für_zahlungsarten_richtig_verknüpfen"><span>11.7.</span><span> Plugins für Zahlungsarten richtig verknüpfen</span></a></li>
</ul>
</li>
</ul>
</div>
        </div>
    </div>
</aside>

<main id="main">
    <h1>Best Practices: Ceres</h1><div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Hier findest du Best Practices zu den Themen <strong>Ceres</strong> und Webshop.</p>
</div>
</div>
</div><div class="sect1 adoc">
<h2 id="updates">1. Ceres-Updates sicher testen</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In diesem Best Practice erfährst du, welche Schritte nötig sind, um neu veröffentlichte Versionen des Ceres Webshop-Templates zu testen, ohne dass dabei der produktive Betrieb deines Webshops beinträchtigt wird.
Durch das Implementieren von neuen Features, das Beheben von Bugs und die Vereinfachung der Benutzeroberfläche kann es immer wieder dazu kommen, dass extern entwickelte Plugins, bei denen Abhängigkeiten zu Ceres bestehen (wie beispielsweise <a href="https://marketplace.plentymarkets.com/plugins/themes" target="_blank" rel="noopener">Themes</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span>), bei einem Update auf eine höhere Ceres Version zu Problemen führen.
Es ist daher ratsam, eine Kopie der <strong>Plugin-Set</strong>-Konfiguration zu erstellen, mit deren Hilfe die Kompatibilität zwischen einer neuen Ceres Version und anderen Plugins überprüft werden kann.</p>
</div>
<div class="sect2">
<h3 id="_plugin_set_kopieren">1.1. Plugin-Set kopieren</h3>
<div class="paragraph">
<p>Du solltest zunächst ein neues <strong>Plugin-Set</strong> erstellen, auf welches du alle Einstellungen deines jetzigen Ceres Webshops überträgst. Gehe dafür wie folgt vor:</p>
</div>
<div class="paragraph instruction">
<p>Plugin-Set kopieren:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Plugins » Plugin Übersicht</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>Neues Plugin-Set erstellen</strong>.<br>
→ Das Fenster <strong>Neues Plugin-Set</strong> wird geöffnet.</p>
</li>
<li>
<p>Gib einen Namen für das Plugin-Set ein, der idealerweise ausdrückt, dass es sich um eine Kopie deines Ceres Shops handelt.</p>
</li>
<li>
<p>Wähle aus der Dropdown-Liste <strong>Plugin-Set kopieren</strong> das Plugin-Set aus, dessen Konfiguration du auf das neue Plugin-Set übertragen willst.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.<br>
→ Das neue Plugin-Set wird erstellt.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Deine Plugin-Set Kopie enthält nun die gleichen Einstellungen wie dein Ceres Shop. Zu diesem Zeitpunkt sind diese beiden Plugin-Sets deckungsgleich.
Es bietet sich an, diesen Vorgang vor jedem größeren Update zu wiederholen, damit die Plugin-Set-Kopie auf einem aktuellen Stand ist.</p>
</div>
</div>
<div class="sect2">
<h3 id="_ceres_update_auf_die_plugin_set_kopie_aufspielen">1.2. Ceres Update auf die Plugin-Set Kopie aufspielen</h3>
<div class="paragraph">
<p>Im nächsten Schritt solltest du nun die erstellte Kopie des Plugin-Sets auf die aktuelle Ceres Version setzen:</p>
</div>
<div class="paragraph instruction">
<p>Plugin-Set Update:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Plugins » Plugin Übersicht</strong>.</p>
</li>
<li>
<p>Wähle die erstellte Kopie des Plugin-Sets.<br>
→ Das Fenster <strong>Plugin-Set Details</strong> wird geöffnet.</p>
</li>
<li>
<p>Klicke in der Zeile des Plugins <strong>Ceres</strong> auf <strong>Aktualisieren</strong> in der Spalte <strong>Aktion</strong>.<br>
→ Das Fenster <strong>Plugin aktualisieren</strong> wird geöffnet.
→ Die aktuelle Version des Plugins ist vorausgewählt.</p>
</li>
<li>
<p>Klicke auf <strong>installieren</strong>.<br>
→ Das Plugin wird installiert.</p>
</li>
<li>
<p>Wiederhole die Schritte 3 und 4 für das Plugin <strong>IO</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>Speichern &amp; Plugins bereitstellen</strong>.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Die Kopie des Plugin-Sets befindet sich nun auf einem aktuelleren Stand, als das Plugin-Set, über welches dein Ceres Shop läuft.
Klicke nun auf das neu erstelle Plugin-Set in der Plugin-Set Liste auf der linken Seite der Oberfläche. Über die Schaltfläche <strong>Plugin-Set Vorschau</strong> kannst du deinen Ceres Shop mit dem aktualisierten Plugin-Set im Vorschaumodus aufrufen. Überprüfe nun, ob die Änderungen an Ceres zu Inkompatibilitäten mit dem von dir genutzten Theme führen.
Wenn die von dir genutzten externen Plugins nach dem Ceres-Update wie gewünscht laufen, kannst du nun entweder die erstellte Kopie des Plugin-Sets für den Mandanten <a href="/plugins#70">aktivieren</a> oder die Plugins deines ursprünglichen Plugin-Set wie oben beschrieben <strong>aktualisieren</strong>.</p>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="paragraph">
<p>Manche Abhängigkeiten zwischen externen Plugins und <strong>Ceres</strong>/<strong>IO</strong> sind nicht sofort ersichtlich. Es ist daher ratsam, das ursprüngliche Plugin-Set nicht vorschnell zu verwerfen, sodass der Wechsel auf die vorherige Version auch nach ein paar Tagen noch möglich ist, ohne dass die Ceres Konfiguration erneut angepasst werden muss. Im <a href="https://forum.plentymarkets.com/c/ceres-webshop" target="_blank" rel="noopener">Forum</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span> erfährst du schnell, welche Probleme zwischen externen Plugins und neuen <strong>Ceres</strong>/<strong>IO</strong> Versionen bestehen können.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div><div class="sect1 adoc">
<h2 id="umstieg-von-callisto">2. Umstieg von Callisto auf Ceres</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In diesem Best Practice erfährst du, welche Dinge du beachten musst, damit dein Callisto Webshop ohne Probleme weiterlaufen kann, während du deinen <a href="/omni-channel/online-shop/ceres-einrichten">Ceres Shop</a> einrichtest.
Die Nummern in den Schritt-für-Schritt Anleitungen beziehen sich auf die durchnummerierten Elemente in den darunter aufgeführten Screenshots.</p>
</div>
<div class="sect2">
<h3 id="_neues_plugin_set_anlegen">2.1. Neues Plugin-Set anlegen</h3>
<div class="paragraph">
<p>Damit du einen Ceres Shop im Vorschau-Modus aufsetzen kannst, ohne dass dein Callisto Shop in irgendeiner Weise davon betroffen ist, musst du zunächst ein neues <a href="/plugins#30">Plugin-Set</a> erstellen.</p>
</div>
<div class="paragraph instruction">
<p>Plugin-Set erstellen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Plugins » Plugin Übersicht</strong>.</p>
</li>
<li>
<p>Klicke in der linken oberen Ecke auf <strong>Neues Plugin-Set erstellen</strong> (1).<br>
→ Das Menü <strong>Neues Plugin-Set</strong> wird geöffnet.</p>
</li>
<li>
<p>Gib einen Namen für dein Plugin-Set ein (2).</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellung (3).<br>
→ Das Plugin-Set wurde erstellt.</p>
</li>
</ol>
</div>
<div class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-umstieg-neuesPluginSet.png" alt="bp ceres umstieg neuesPluginSet">
</div>
</div>
<div class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-umstieg-neuesPluginSetFenster.png" alt="bp ceres umstieg neuesPluginSetFenster">
</div>
</div>
<div class="admonitionblock warning">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-warning" title="Warnung"></i>
</td>
<td class="content">
<div class="paragraph">
<p>Damit der Callisto-Webshop von den vorgenommenen Änderungen unberührt bleibt, darf das erstellte Plugin-Set <strong>nicht</strong> für einen Mandanten aktiviert werden.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="paragraph">
<p>In dem erstellten Plugin-Set kannst du nun damit beginnen, deinen Ceres Webshop einzurichten, ohne dass dein Callisto-Shop im produktiven Betrieb beeinträchtigt wird.</p>
</div>
</div>
<div class="sect2">
<h3 id="_plugin_set_einrichten">2.2. Plugin-Set einrichten</h3>
<div class="paragraph">
<p>Nachdem du die Plugins <strong>Ceres</strong> und <strong>IO</strong> <a href="https://marketplace.plentymarkets.com/plugins/templates" target="_blank" rel="noopener">gekauft</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span> hast, <strong>installierst und aktivierst</strong> du diese nun für das erstellte Plugin-Set.</p>
</div>
<div class="paragraph instruction">
<p>Plugin-Set einrichten:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Plugins » Plugin-Übersicht</strong>.</p>
</li>
<li>
<p>Klicke auf das zuvor erstellte Plugin-Set (4).<br>
→ Das Fenster <strong>Plugin-Set Details</strong> wird geöffnet.</p>
</li>
<li>
<p>Wähle die Option <strong>Alle</strong> bei den Suchfiltern <strong>Herkunft</strong>, <strong>Installiert</strong> und <strong>Aktiv</strong> (5).</p>
</li>
<li>
<p>Klicke auf <strong>Suchen</strong>.<br>
→ Alle gekauften Plugins werden angezeigt.</p>
</li>
<li>
<p>Klicke in der Zeile des Plugins <strong>Ceres</strong> auf <strong>Plugin installieren</strong> in der Spalte <strong>Aktion</strong> (6).<br>
→ Das Installationsfenster wird geöffnet.<br>
→ Die aktuellste Version des Plugins ist vorausgewählt (7).</p>
</li>
<li>
<p>Klicke auf <strong>Installieren</strong> (8).</p>
</li>
<li>
<p><strong>Aktiviere</strong> das Plugin durch Klick auf die Weltkugel. (9)</p>
</li>
<li>
<p>Wiederhole die Schritte 5 bis 7 für das Plugin <strong>IO</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>Speichern &amp; Plugins veröffentlichen</strong> (10).<br>
→ Solange der Bereitstellungsprozess noch nicht abgeschlossen ist, ist die Schaltfläche <strong>Speichern</strong> ausgegraut (11) und die Versionsnummer des Plugins in der Spalte <strong>Version aktiv</strong> entspricht nicht der des installierten Plugins (12) .</p>
</li>
</ol>
</div>
<div class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-umstieg-pluginSetAuswahl.png" alt="bp ceres umstieg pluginSetAuswahl">
</div>
</div>
<div class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-umstieg-installieren.png" alt="bp ceres umstieg installieren">
</div>
</div>
<div class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-umstieg-installierte-version.png" alt="bp ceres umstieg installierte version">
</div>
</div>
<div class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-umstieg-aktivieren-und-bereitstellen.png" alt="bp ceres umstieg aktivieren und bereitstellen">
</div>
</div>
<div class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-umstieg-ausgegraut.png" alt="bp ceres umstieg ausgegraut">
</div>
</div>
<div class="paragraph">
<p>Damit sind die Vorarbeiten geleistet und du kannst damit beginnen, deinen Ceres Shop einzurichten. Ziehe hierzu die Handbuchseiten <a href="/willkommen/schnelleinstieg#570">Schnelleinstieg</a> und <a href="/omni-channel/online-shop/ceres-einrichten#20">Ceres einrichten</a> zu Rate.
Wie du Änderungen an deinem Webshop im Vorschaumodus testest, erfährst du im Folgenden.</p>
</div>
</div>
<div class="sect2">
<h3 id="_ceres_webshop_im_vorschaumodus_testen">2.3. Ceres Webshop im Vorschaumodus testen</h3>
<div class="paragraph">
<p>Damit du deine Änderungen jederzeit im Webshop nachverfolgen kannst, bietet dir die <strong>Plugin Übersicht</strong> die Option, deinen Shop im Vorschaumodus aufzurufen.
Bevor du deinen Ceres Shop im Vorschaumodus aufrufst, solltest du dein Plugin-Set erneut über die Schaltfläche <strong>Speichern &amp; Plugin-Set veröffentlichen</strong> bereitstellen.</p>
</div>
<div class="paragraph instruction">
<p>Plugin-Set als Vorschau öffnen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Plugins » Plugin-Übersicht</strong>.</p>
</li>
<li>
<p>Klicke auf das zuvor erstellte Plugin-Set.<br>
→ Das Fenster <strong>Plugin-Set Details</strong> wird geöffnet.</p>
</li>
<li>
<p>Klicke auf den <strong>Plugin-Set Vorschau</strong> (13).
→ Der Webshop wird mit dem gewählten Plugin-Set in einem neuen Browser-Tab geöffnet.</p>
</li>
</ol>
</div>
<div class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-umstieg-vorschau.png" alt="bp ceres umstieg vorschau">
</div>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="paragraph">
<p>Beachte, dass du <a href="/willkommen/schnelleinstieg#70">Popups</a> erlaubt haben solltest, damit der Shop im neuen Browser-Tab geöffnet werden kann.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
<div class="sect2">
<h3 id="_ceres_webshop_produktiv_schalten">2.4. Ceres Webshop produktiv schalten</h3>
<div class="paragraph">
<p>Wenn alle deine Tests im Vorschaumodus abgeschlossen sind und du nun deinen Callisto Shop durch Ceres ersetzen willst, aktivierst du das Plugin-Set für den jeweiligen Mandanten. Diese Verknüpfung kann, falls nötig, auch wieder aufgehoben werden. Du kannst also jederzeit zu deinem alten Webshop zurückwechseln.</p>
</div>
<div class="paragraph instruction">
<p>Plugin-Set für einen Mandanten aktivieren:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Plugins » Plugin-Übersicht</strong>.</p>
</li>
<li>
<p>Klicke auf das zuvor erstellte Plugin-Set.<br>
→ Das Fenster <strong>Plugin-Set Details</strong> wird geöffnet.</p>
</li>
<li>
<p>Klicke in der linken oberen Ecke auf <strong>Plugin-Set aktivieren</strong>.<br>
→ Das Fenster <strong>Plugin-Set Aktivieren</strong> wird geöffnet.</p>
</li>
<li>
<p>Wähle das Plugin-Set aus der Dropdown-Liste (14), das du mit dem jeweiligen Mandanten (15) verknüpfen willst.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen (16).<br>
→ Die Erfolgsmeldung <strong>Plugin-Set X ist für Mandant Y aktiv</strong> wird angezeigt.</p>
</li>
</ol>
</div>
<div class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-umstieg-aktivieren.png" alt="bp ceres umstieg aktivieren">
</div>
</div>
<div class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-umstieg-aktivierenFenster.png" alt="bp ceres umstieg aktivierenFenster">
</div>
</div>
<div class="paragraph">
<p>Damit ist der Ceres Webshop produktiv geschaltet und ersetzt deinen Callisto Webshop.</p>
</div>
</div>
</div>
</div><div class="sect1 adoc">
<h2 id="bp-ceres-EOL">3. Callisto EOL (End of Life) - Welchen Bestellvorgang nutze ich?</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Der Webshop auf Basis des <strong>Ceres</strong>-Plugins wird mittelfristig alle alten Callisto-Webshops ersetzen. Bestimmte Funktionalitäten von Callisto werden in diesem Zuge nach und nach abgeschaltet. Auf der <a href="/basics/eol">EOL-Seite</a> findest du eine Übersicht über alle Daten, die für die Abschaltung relevant sind.<br>
Dieses Kapitel soll dir dabei helfen, den Überblick über den Stand von Callisto zu behalten und erklärt dir, in welchen Fällen du zu welchem Zeitpunkt aktiv werden musst.</p>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="title">Das Wichtigste vorab</div>
<div class="ulist">
<ul>
<li>
<p>Dieses Kapitel richtet sich nur an Nutzer:innen, die einen Callisto-Webshop betreiben. Wenn dein Shop bereits komplett auf Ceres-Basis läuft, ist dieses Kapitel für dich nicht interessant.</p>
</li>
<li>
<p>Wir empfehlen, dass ihr euch rechtzeitig mit der Umstellung von Callisto auf Ceres beschäftigt. Selbst wenn manche Callisto-Webshops noch bis ins dritte Quartal 2020 funktionieren werden, haben wir die Softwarepflege bereits im Herbst 2018 eingestellt und unsere Ressourcen fließen in die Weiterentwicklung von Ceres.</p>
</li>
</ul>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="sect2">
<h3 id="_bestellvorgänge_in_callisto">3.1. Bestellvorgänge in Callisto</h3>
<div class="paragraph">
<p>Da bestimmte Funktionen von Callisto zu unterschiedlichen Zeitpunkten abgeschaltet werden, besteht die Gefahr, dass Nutzer:innen sich gegebenenfalls nicht sicher sind, zu welchem Zeitpunkt sie aktiv werden müssen, um ihren Webshop weiter betreiben zu können.<br>
Der wichtigste Aspekt hierbei ist der individuelle Bestellvorgang und der Termin an dem dieser eingestellt wird:</p>
</div>
<table id="tabelle-bestellvorgang-callisto" class="tableblock frame-all grid-all stretch">
<caption class="title">Tabelle 1. Bestellvorgang in Callisto</caption>
<colgroup>
<col style="width: 25%;">
<col style="width: 75%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Bestellvorgang</th>
<th class="tableblock halign-left valign-top">Termin der Abschaltung</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Individueller Bestellvorgang</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">02.06.2020</p></td>
</tr>
</tbody>
</table>
<div class="paragraph">
<p>Für Kunden und Kundinnen, die den Callisto-Bestellvorgang nutzen (also alle, deren Webshop nicht komplett auf Ceres aufbaut), bedeutet die Abschaltung, dass sie bis zum betreffenden Termin den <a href="/webshop/best-practices#standard">Ceres-Checkout</a>, also die Kaufabwicklung auf Basis des Ceres-Plugins, einbauen müssen. Im verlinkten Best Practice erfährst du Schritt für Schritt was dabei zu beachten ist.<br></p>
</div>
<div class="paragraph">
<p>Solltest du dich selbst nicht in der Lage dazu sehen, den Ceres-Checkout selbst einzubauen, findest du <a href="https://marketplace.plentymarkets.com/services/einrichtung" target="_blank" rel="noopener">auf dem Marketplace</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span> einige Angebote für den professionellen Umstieg.<br></p>
</div>
<div class="paragraph">
<p>Auch unsere <a href="https://www.plentymarkets.eu/service/partneragenturen/" target="_blank" rel="noopener">Partneragenturen</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span> können dir weiterhelfen.</p>
</div>
<div class="admonitionblock important">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-important" title="Wichtig"></i>
</td>
<td class="content">
<div class="paragraph">
<p>Der Umstieg auf den Ceres-Checkout oder einen reinen Ceres-Webshop ist zu den betreffenden Terminen zwingend erforderlich, da ansonsten keine Bestellungen mehr über deinen Webshop abgeschlossen werden können.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
<div class="sect2">
<h3 id="_welchen_bestellvorgang_nutze_ich">3.2. Welchen Bestellvorgang nutze ich?</h3>
<div class="paragraph">
<p>In <a href="https://forum.plentymarkets.com/t/dashboard-welcher-bestellvorgang-ist-aktiv/527626" target="_blank" rel="noopener">diesem Forumsbeitrag</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span> wurde angekündigt, dass ab sofort eine Meldung in deinem plentymarkets Backend angezeigt wird, die dich darüber informiert, welchen Bestellvorgang du nutzt und zu welchem Zeitpunkt dieser abgeschaltet wird.<br></p>
</div>
<div class="ulist">
<ul>
<li>
<p>Der Hinweis für den <strong>Individuellen Bestellvorgang</strong> wird rot dargestellt.</p>
</li>
</ul>
</div>
<div id="EOL-hinweis" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-EOL-hinweis.png" alt="bp EOL hinweis">
</div>
<div class="title">Bild 1. EOL-Hinweis im Backend</div>
</div>
<div class="paragraph">
<p>Dies reicht bereits aus um festzustellen, welchen Bestellvorgang du in deinem Callisto-Webshop nutzt. Wenn du dies allerdings selbst überprüfen möchtest, gehe wie folgt vor:<br></p>
</div>
<div class="paragraph instruction">
<p>Bestellvorgang überprüfen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>CMS » Webdesign</strong>.</p>
</li>
<li>
<p>Wähle links in der Dropdown-Liste das entsprechende Layout, das du prüfen möchtest. Bei mehreren Mandanten können mehrere Layouts aktiv sein. In diesem Fall solltest du alle Layouts einzeln prüfen.</p>
</li>
<li>
<p>Klicke auf <strong>Einstellungen</strong>.</p>
</li>
<li>
<p>Wechsel in das Tab <strong>Mandanten</strong>.</p>
</li>
<li>
<p>Wähle auf der linken Seite den für das Layout aktivierten <strong>Mandanten</strong>.<br>
→ Um zu erfahren, für welche Mandanten das Layout aktiviert ist, fahre mit der Maus über die <strong>Layout</strong> Dropdown-Liste. Im Tooltip werden dir die Mandanten angezeigt.</p>
</li>
<li>
<p>Wechsle auf der rechten Seite in das Tab <strong>Bestellvorgang</strong>.</p>
</li>
<li>
<p>Unter <strong>Art des Bestellvorgangs</strong> wird dir angezeigt, welcher Bestellvorgang in diesem Layout im Einsatz ist.<br>
→ Je nachdem ob du den <strong>Standard-Bestellvorgang</strong> oder den <strong>Individuellen Bestellvorgang</strong>  nutzt, musst du zum oben genannten Zeitpunkt auf Ceres umsteigen.</p>
</li>
</ol>
</div>
</div>
<div class="sect2">
<h3 id="_nächste_schritte">3.3. Nächste Schritte</h3>
<div class="paragraph">
<p>Du hast überprüft, welchen Bestellvorgang du nutzt und zu welchem Termin du spätestens auf Ceres oder den Ceres-Checkout wechseln musst.<br></p>
</div>
<div class="paragraph">
<p>Deine Optionen sind nun die folgenden:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Du kannst den <a href="/webshop/best-practices#checkout">Ceres-Checkout</a> in deinen Callisto-Webshop integrieren und deinen Callisto-Shop noch bis Q3 2020 betreiben.</p>
</li>
<li>
<p>Du kannst direkt einen <a href="/webshop/ceres-einrichten">Ceres-Webshop</a> einrichten und sparst dir damit eine erneute Umstellung im dritten Quartal 2020.</p>
</li>
</ul>
</div>
<div class="admonitionblock important">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-important" title="Wichtig"></i>
</td>
<td class="content">
<div class="paragraph">
<p>Egal ob neuer Ceres-Shop oder Callisto mit Ceres-Checkout: Führe Änderungen in einem separaten Plugin-Set durch, sodass der Live-Betrieb deines Webshops nicht beeinträchtigt wird. <a href="/webshop/best-practices#umstieg-von-callisto">Hier</a> erfährst du, wie du den Umstieg sicher über die Bühne bringst.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
<div class="sect2">
<h3 id="_weiterführende_informationen">3.4. Weiterführende Informationen</h3>
<div class="ulist">
<ul>
<li>
<p>Alle <strong>EOL</strong>-Daten findest du auf <a href="/basics/eol">dieser Seite</a>.</p>
</li>
<li>
<p>Weitere Informationen zum EOL von Callisto findest du <a href="https://forum.plentymarkets.com/t/verschiebung-der-abschaltung-vom-individuellen-bestellvorgang-und-vom-alten-webshop-callisto/574682" target="_blank" rel="noopener">in diesem Beitrag</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span>.</p>
</li>
</ul>
</div>
</div>
</div>
</div><div class="sect1 adoc">
<h2 id="checkout">4. Ceres-Checkout in Callisto einrichten</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Du willst den neuen Checkout mit seiner Plugin-Fähigkeit und individuellen Anpassbarkeit in deinem Callisto-Webshop nutzen? Kein Problem – im Folgenden erfährst du Schritt für Schritt, was dafür nötig ist. Solltest du noch weitere Unterstützung bei der Integration des Ceres-Checkouts in Callisto brauchen, schau bei unserem Service-Angebot auf dem <a href="https://marketplace.plentymarkets.com/services/CeresCheckout4Callisto_5475" target="_blank" rel="noopener">Marketplace</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span> vorbei.</p>
</div>
<div class="sect2">
<h3 id="individueller-bestellvorgang">4.1. Ceres-Checkout für Callisto-Webshops mit <strong>individuellem Bestellvorgang</strong></h3>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="title">Das Wichtigste vorab …</div>
<div class="ulist">
<ul>
<li>
<p>Dieses Best Practice beschreibt die Einrichtung des Ceres-Checkouts in einen Callisto-Webshop. Kopiere dir bitte dein Design und führe keine Anpassungen an deinem <strong>aktiven</strong> Layout durch.</p>
</li>
<li>
<p>Diese Anleitung bezieht sich auf Ceres-Checkouts, die <strong>nicht</strong> mit dem ShopBuilder erstellt wurden.</p>
</li>
<li>
<p>Um den Ceres-Checkout zu nutzen, benötigst du neben deinem Callisto-Webshop die aktuellen Versionen der Plugins <a href="https://marketplace.plentymarkets.com/plugins/templates/Ceres_4697" target="_blank" rel="noopener">Ceres</a> und <a href="https://marketplace.plentymarkets.com/plugins/templates/IO_4696" target="_blank" rel="noopener">IO</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span>. Beide findest du im plentyMarketplace. Die Plugins müssen in einer Plugin-Set-Kopie installiert und aktiviert sein.</p>
</li>
<li>
<p>Um deine Zahlungsanbieter im Ceres-Checkout benutzen zu können, musst du die jeweiligen Plugins aus dem <a href="https://marketplace.plentymarkets.com/plugins/payment">Marketplace</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span> laden und installieren. Bitte beachte, dass es Zahlungsanbieter gibt, die bislang kein Plugin zur Verfügung stellen und auf deren Leistungen du daher mit dem Ceres-Checkout nicht zurückgreifen kannst.</p>
</li>
</ul>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="admonitionblock important">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-important" title="Wichtig"></i>
</td>
<td class="content">
<div class="title">Callisto-URL-Struktur für Artikel aktivieren</div>
<div class="paragraph">
<p>Wenn du einen Callisto-Webshop mit Ceres-Checkout nutzen möchtest, raten wir dir von der Option <strong>Callisto-URL-Struktur für Artikel aktivieren</strong> Gebrauch zu machen, um deine SEO-Werte nicht negativ zu beinflussen. Du findest die Einstellung im Menü <strong>Plugin-Übersicht » Ceres » Konfiguration » Global</strong>.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="admonitionblock important">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-important" title="Wichtig"></i>
</td>
<td class="content">
<div class="title">In einer Plugin-Set-Kopie arbeiten</div>
<div class="paragraph">
<p>Damit der Live-Betrieb des Webshops beim Testen des Ceres Checkouts nicht beeinträchtigt wird, bietet es sich an, die Änderungen in einem separaten Plugin-Set zu testen. Wie du eine Kopie deines Plugin-Sets erstellst, erfährst du in <a href="/webshop/best-practices#_plugin_set_kopieren">diesem Best Practice</a>. Führe die Änderungen zuerst im <a href="/plugins/plugin-sets">Vorschaumodus</a> aus, bevor du sie in deinen Webshop übernimmst.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="paragraph">
<p>Wenn du in deinem Callisto-Shop den <strong>individuellen Bestellvorgang</strong> nutzt, musst du den Ceres-Checkout bis spätestens 02.06.2020 eingebunden haben, da ansonsten keine Bestellungen mehr über deinen Webshop abgeschlosen werden können.<br></p>
</div>
<div class="paragraph">
<p>Wenn du die folgenden Anweisungen Schritt für Schritt durcharbeitest, kannst du deinen Callisto-Shop mit wenigen Handgriffen mit dem Ceres-Checkout ausstatten.</p>
</div>
<div class="sect3">
<h4 id="_routen_verwalten">4.1.1. Routen verwalten</h4>
<div class="paragraph">
<p>Ceres baut auf der Logik des Plugins IO auf. Um den Checkout so zu nutzen, dass alle Links zwischen Callisto und Ceres korrekt funktionieren, verfährst du wie folgt:</p>
</div>
<div class="paragraph instruction">
<p>Einstellungen in IO vornehmen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Plugins » Plugin-Übersicht</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>IO</strong>.<br>
→ Das Plugin wird geöffnet.</p>
</li>
<li>
<p>Klicke im Verzeichnisbaum auf <strong>Konfiguration</strong>.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Routing</strong>.</p>
</li>
<li>
<p>Entferne das Häkchen neben <strong>Routen aktivieren</strong>.<br>
→ Alle Routen werden deaktiviert.</p>
</li>
<li>
<p>Aktiviere die Routen <strong>/checkout</strong>, <strong>/confirmation</strong>, <strong>/login</strong>, <strong>/register</strong>, <strong>password-reset</strong>, <strong>/place-order &amp; /execute-payment</strong>, und <strong>/my-account</strong>.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph instruction">
<p>Einstellungen in Ceres vornehmen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Plugins » Plugin-Übersicht</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>Ceres</strong>.<br>
→ Das Plugin wird geöffnet.</p>
</li>
<li>
<p>Klicke im Verzeichnisbaum auf <strong>Konfiguration</strong>.<br>
→ Das Tab <strong>Global</strong> ist bereits vorausgewählt.</p>
</li>
<li>
<p>Klicke auf <strong>Callisto-URL-Struktur für Artikel aktivieren</strong>.<br>
→ Die Callisto-Routen werden aktiviert.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.<br>
→ Der Ceres-Checkout ist in Ihrem Callisto-Webshop aktiv.</p>
</li>
</ol>
</div>
</div>
<div class="sect3">
<h4 id="_bestellabwicklung_anpassen">4.1.2. Bestellabwicklung anpassen</h4>
<div class="paragraph">
<p>Für die Bestellabwicklung müssen Änderungen an deinen Kategorien vorgenommen werden. Gehe dazu wie folgt vor:</p>
</div>
<div class="paragraph instruction">
<p>Kategorien erstellen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Artikel » Kategorien</strong>.</p>
</li>
<li>
<p>Erstelle eine neue Hauptkategorie mit dem Namen <strong>login</strong>.</p>
</li>
<li>
<p>Öffne die Kategorie <strong>login</strong>.</p>
</li>
<li>
<p>Wähle den Kategorietyp <strong>Container</strong>.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
<li>
<p>Erstelle eine neue Hauptkategorie mit dem Namen <strong>checkout</strong>.</p>
</li>
<li>
<p>Öffne die Kategorie <strong>checkout</strong>.</p>
</li>
<li>
<p>Wähle den Kategorietyp <strong>Container</strong>.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Anschließend verknüpfst du die neuen Kategorien mit den Bestellschritten von Callisto.</p>
</div>
<div class="paragraph instruction">
<p>Bestellvorgang anpassen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>CMS » Webdesign</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>Einstellungen</strong>.<br>
→ Das Menü <strong>Design-Einstellungen</strong> wird geöffnet.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Mandanten</strong>.</p>
</li>
<li>
<p>Wähle den Mandanten, für den du die Änderungen vornehmen willst.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Bestellvorgang</strong>.</p>
</li>
<li>
<p>Klicke neben <strong>2. Bestellschritt</strong> auf <strong>Suchen</strong>.</p>
</li>
<li>
<p>Wähle die zuvor erstellte Kategorie <strong>login</strong>.</p>
</li>
<li>
<p>Klicke neben <strong>3. Bestellschritt</strong> auf <strong>Suchen</strong>.</p>
</li>
<li>
<p>Wähle die zuvor erstellte Kategorie <strong>checkout</strong>.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Wenn du nun aus dem Warenkorb zur Kasse gehst, wirst du auf den Ceres-Checkout weitergeleitet, der alle neuen Funktionen wie z.B. Payment-Plugins wie PayPal ermöglicht.</p>
</div>
</div>
<div class="sect3">
<h4 id="_backlinks_setzen">4.1.3. Backlinks setzen</h4>
<div class="paragraph">
<p>Damit ein nicht angemeldeter Benutzer nach dem Klick auf <strong>Zur Kasse</strong> vom Login weiter zur Bestellabwicklung geleitet wird, müssen Änderungen am Callisto-Code vorgenommen werden. Gehe dazu vor wie im Folgenden beschrieben:</p>
</div>
<div class="paragraph instruction">
<p>Backlinks für den Warenkorb setzen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Artikel » Kategorien</strong>.</p>
</li>
<li>
<p>Klappe deine Callisto-Kategorie auf.</p>
</li>
<li>
<p>Klicke auf die Kategorie <strong>Warenkorb</strong>.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Beschreibung 1</strong>.</p>
</li>
<li>
<p>Suche den folgenden Code: <code>&#123;&#37; if ( $CustomerID ) { Link_Checkout(3); } else { Link_Checkout(2); } &#37;&#125;</code></p>
</li>
<li>
<p>Ersetze den Code durch: <code>$_check.$_backlink</code></p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>In der Zeile vor dem gerade eingefügten <code>$_check.$_backlink</code> musst du nun noch den folgenden Code einfügen:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">&#123;&#37; if( $CustomerID ) &#37;&#125;
	&#123;&#37; $_check = Link_Checkout(3); &#37;&#125;
	&#123;&#37; $_backlink = ''; &#37;&#125;
&#123;&#37; else &#37;&#125;
	&#123;&#37; $_check = Link_Checkout(2); &#37;&#125;
	&#123;&#37; $_backlink = '?backlink='; &#37;&#125;
	&#123;&#37; if $Lang !== 'de' &#37;&#125;
	  &#123;&#37; $_backlink = $_backlink . '/' . $Lang; &#37;&#125;
	&#123;&#37; endif &#37;&#125;
	&#123;&#37; $_backlink .= '/checkout'; &#37;&#125;
&#123;&#37; endif &#37;&#125;</code></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Speichere</strong> deine Änderungen am Code.<br>
Das <strong>de</strong> in der Zeile <code>&#123;&#37; if $Lang !== 'de' &#37;&#125;</code> bezieht sich hier auf die Standardprache des Webshops. Falls die Standardsprache nicht Deutsch ist, muss das Sprachkürzel entsprechend angepasst werden.</p>
</div>
<div class="paragraph instruction">
<p>Backlinks für die Warenkorbvorschau setzen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>CMS » Webdesign » Layout » ItemView » ItemViewBasketPreviewList</strong>.</p>
</li>
<li>
<p>Suche den folgenden Code: <code>&#123;&#37; if( $CustomerID ) { Link_Checkout(3); } else { Link_Checkout(2); } &#37;&#125;</code></p>
</li>
<li>
<p>Ersetze den Code durch <code>$_check.$_backlink</code></p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>In der Zeile vor dem gerade eingefügten <code>$_check.$_backlink</code> musst du nun noch den folgenden Code einfügen:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">&#123;&#37; if( $CustomerID ) &#37;&#125;
	&#123;&#37; $_check = Link_Checkout(3); &#37;&#125;
	&#123;&#37; $_backlink = ''; &#37;&#125;
&#123;&#37; else &#37;&#125;
	&#123;&#37; $_check = Link_Checkout(2); &#37;&#125;
	&#123;&#37; $_backlink = '?backlink='; &#37;&#125;
	&#123;&#37; if $Lang !== 'de' &#37;&#125;
	  &#123;&#37; $_backlink = $_backlink . '/' . $Lang; &#37;&#125;
	&#123;&#37; endif &#37;&#125;
	&#123;&#37; $_backlink .= '/checkout'; &#37;&#125;
&#123;&#37; endif &#37;&#125;</code></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Speichere</strong> deine Änderungen am Code.<br>
Das <strong>de</strong> in der Zeile <code>&#123;&#37; if $Lang !== 'de' &#37;&#125;</code> bezieht sich hier auf die Standardprache des Webshops. Falls die Standardsprache nicht Deutsch ist, muss das Sprachkürzel entsprechend angepasst werden.</p>
</div>
<div class="paragraph instruction">
<p>Backlinks für das Warenkorb-Overlay setzen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>CMS » Webdesign » Layout » ItemView » ItemViewItemToBasketConfirmationOverlay</strong>.</p>
</li>
<li>
<p>Suche den folgenden Code: <code>&#123;&#37; if( $CustomerID ) { Link_Checkout(3); } else { Link_Checkout(2); } &#37;&#125;</code></p>
</li>
<li>
<p>Ersetze den Code durch: <code>$_check.$_backlink</code></p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>In der Zeile vor dem gerade eingefügten <code>$_check.$_backlink</code> musst du nun noch den folgenden Code einfügen:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">&#123;&#37; if( $CustomerID ) &#37;&#125;
	&#123;&#37; $_check = Link_Checkout(3); &#37;&#125;
	&#123;&#37; $_backlink = ''; &#37;&#125;
&#123;&#37; else &#37;&#125;
	&#123;&#37; $_check = Link_Checkout(2); &#37;&#125;
	&#123;&#37; $_backlink = '?backlink='; &#37;&#125;
	&#123;&#37; if $Lang !== 'de' &#37;&#125;
	  &#123;&#37; $_backlink = $_backlink . '/' . $Lang; &#37;&#125;
	&#123;&#37; endif &#37;&#125;
	&#123;&#37; $_backlink .= '/checkout'; &#37;&#125;
&#123;&#37; endif &#37;&#125;</code></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Speichere</strong> deine Änderungen am Code.<br>
Das <strong>de</strong> in der Zeile <code>&#123;&#37; if $Lang !== 'de' &#37;&#125;</code> bezieht sich hier auf die Standardprache des Webshops. Falls die Standardsprache nicht Deutsch ist, muss das Sprachkürzel entsprechend angepasst werden.<br></p>
</div>
<div class="paragraph">
<p>Kunden, die zusätzliche individuelle Anpassungen an ihrem Layout vorgenommen haben, müssen überprüfen an welchen Stellen sie ihre Kunden zur Kaufabwicklung weiterleiten. Diese Stellen müssen so angepasst werden, dass sie auf die Route <strong>/checkout</strong> verlinken. Wir können diese individuellen Anpassungen nicht abfangen, da sie von Kunde zu Kunde anders ausfallen können.<br></p>
</div>
<div class="paragraph">
<p>Der Ceres-Checkout wird sich von deinem bisherigen Callisto-Layout optisch unterscheiden. Du kannst Header und Footer des Checkouts und des Warenkorbs global über den <a href="/webshop/shop-builder#95">ShopBuilder</a> bearbeiten. Den Checkout selbst wirst du mit Ceres Version 3.1.0 über den ShopBuilder bearbeiten können. Weiterhin kannst du eigene Anpassungen über ein Theme realisieren.</p>
</div>
<div class="paragraph">
<p>Passe nun noch die Pfade für deine rechtlichen Angaben an.</p>
</div>
</div>
<div class="sect3">
<h4 id="_rechtliche_angaben_anpassen">4.1.4. Rechtliche Angaben anpassen</h4>
<div class="paragraph">
<p>Die vier rechtlich relevanten Angaben <strong>AGB</strong>, <strong>Datenschutzerklärung</strong>, <strong>Impressum</strong> und <strong>Widerrufsrecht</strong> müssen neu verknüpft werden, um weiterhin korrekt angezeigt zu werden.</p>
</div>
<div class="paragraph instruction">
<p>AGB anpassen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Artikel » Kategorien</strong>.</p>
</li>
<li>
<p>Klappe deine Callisto-Kategorie, in der die rechtlichen Angaben liegen, auf.</p>
</li>
<li>
<p>Kopiere die Kategorie <strong>AGB</strong> als Hauptkategorie.<br>
→ Die neue Hauptkategorie <strong>AGB</strong> wird geöffnet.</p>
</li>
<li>
<p>Gib als <strong>URL-Name</strong> der Kategorie <strong>gtc</strong> ein.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph instruction">
<p>Datenschutzerklärung anpassen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Artikel » Kategorien</strong>.</p>
</li>
<li>
<p>Klappe deine Callisto-Kategorie, in der die rechtlichen Angaben liegen, auf.</p>
</li>
<li>
<p>Kopiere die Kategorie <strong>Datenschutz</strong> als Hauptkategorie.<br>
→ Die neue Hauptkategorie <strong>Datenschutz</strong> wird geöffnet.</p>
</li>
<li>
<p>Gib als <strong>URL-Name</strong> der Kategorie <strong>privacy-policy</strong> ein.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph instruction">
<p>Impressum anpassen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Artikel » Kategorien</strong>.</p>
</li>
<li>
<p>Klappe deine Callisto-Kategorie, in der die rechtlichen Angaben liegen, auf.</p>
</li>
<li>
<p>Kopiere die Kategorie <strong>Impressum</strong> als Hauptkategorie.<br>
→ Die neue Hauptkategorie <strong>Impressum</strong> wird geöffnet.</p>
</li>
<li>
<p>Gib als <strong>URL-Name</strong> der Kategorie <strong>legal-disclosure</strong> ein.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph instruction">
<p>Widerrufsrecht anpassen:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Artikel » Kategorien</strong>.</p>
</li>
<li>
<p>Klappe deine Callisto-Kategorie, in der die rechtlichen Angaben liegen, auf.</p>
</li>
<li>
<p>Kopiere die Kategorie <strong>Widerrufsrecht</strong> als Hauptkategorie.<br>
→ Die neue Hauptkategorie <strong>Widerrufsrecht</strong> wird geöffnet.</p>
</li>
<li>
<p>Gib als <strong>URL-Name</strong> der Kategorie <strong>cancellation-rights</strong> ein.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Wenn du deine rechtlichen Angaben gespeichert hast, die Routen wie beschrieben aktiviert wurden, die Kategorien angepasst wurden, die Backlinks gesetzt sind und du alle für deinen Shop relevanten Zahlungs- und Versanddienstleister über Plugins eingebunden hast, ist dein Ceres-Checkout einsatzfähig und du hast die Hürden des Callisto EOLs gemeistert.</p>
</div>
</div>
</div>
</div>
</div><div class="sect1 adoc">
<h2 id="filter">5. Filter einrichten</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Filter werden in Ceres mithilfe von Attributen und Merkmalen abgebildet. In diesem Best Practice wird beschrieben, wie der Filter <strong>Farbe</strong> mit den zwei Werten <strong>Rot</strong> und <strong>Schwarz</strong> in der Kategorie-Ansicht des Webshops angezeigt wird. Passende Filter werden in der Kategorie-Ansicht nur eingeblendet, wenn es auch Artikel gibt, die mit diesen Filterwerten verknüpft sind.</p>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="title">Das Wichtigste vorab …​</div>
<div class="ulist">
<ul>
<li>
<p>Hierbei handelt es sich um ein Best Practice für das Webshop-Plugin <strong>Ceres</strong>. <strong>Ceres</strong> ist im <a href="https://marketplace.plentymarkets.com/plugins/templates/Ceres_4697" target="_blank" rel="noopener">plentyMarketplace</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span> verfügbar und läuft auf plentymarkets Systemen. Die Filter aus <strong>Ceres</strong> werden auch in individuellen Theme-Plugins angezeigt, sofern diese  in den Themes nicht überschrieben wurden.</p>
</li>
<li>
<p>Eine Integration in individuelle oder veränderte Template-Plugins ist möglich, bedarf aber individueller Anpassungen, die an dieser Stelle nicht berücksichtigt werden können.</p>
</li>
<li>
<p>Filter können mittels <a href="/omni-channel/online-shop/webshop-einrichten/extras/facettensuche#100">Facetten</a> über <strong>Attribute</strong> und <strong>Merkmale</strong> dargestellt werden. In diesem Best Practice werden Filter am Beispiel von <strong>Attributen</strong> eingerichtet. Filter über <strong>Merkmale</strong> werden analog eingerichtet. Hierbei legst du eine <strong>Merkmalgruppe</strong> an, in der du deine Merkmale vom Typ <strong>Kein</strong> organisierst. Die Merkmale verknüpfst du mit Facetten-Werten.</p>
</li>
<li>
<p>Das Menü <strong>Einrichtung » Mandant » Global » Dienste » Facettensuche</strong> ist bei plentymarkets Zero-System nur im zentralen Login aktiviert.</p>
</li>
</ul>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="sect2">
<h3 id="_attribut_anlegen">5.1. Attribut anlegen</h3>
<div class="paragraph">
<p>Wir starten also mit einem Attribut.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Einrichtung » Artikel » Attribute</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>Neues Attribut</strong>.</p>
</li>
<li>
<p>Gib den internen Namen ein, z.B. <strong>Farbe</strong>.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.<br>
→ Das Attribut wird angelegt und das Tab <strong>Einstellungen</strong> geöffnet.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Name</strong>.</p>
</li>
<li>
<p>Gib die Übersetzungen für dein Attribut ein.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Werte</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>Neuer Wert</strong>.</p>
</li>
<li>
<p>Gib den internen Namen ein, z.B. <strong>Rot</strong>.</p>
</li>
<li>
<p>Wiederhole die Schritte 8 und 9 für den Wert <strong>Schwarz</strong>.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Das Attribut mit unseren beiden Werten <strong>Rot</strong> und <strong>Schwarz</strong> wird angelegt. Hier kannst du auch weitere Werte wie <strong>Fuchsrot</strong> oder <strong>Karminrot</strong> erstellen und in der gleichen Facette <strong>Rot</strong> verknüpfen.</p>
</div>
</div>
<div class="sect2">
<h3 id="_attribut_mit_artikel_verknüpfen">5.2. Attribut mit Artikel verknüpfen</h3>
<div class="paragraph">
<p>Attribute verknüpfst du beim Erstellen eines Artikels mit der Hauptvariante des Artikels. Wenn du weitere Varianten erstellst, verknüpfst du diese Varianten ebenfalls mit Attributwerten. Ich erstelle nun meine Varianten im Tab <strong>Varianten</strong> meines Artikels. Diese Varianten müssen im Webshop aktiv sein, damit später unser Filter eingeblendet wird.</p>
</div>
<div id="filter-varianten" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-filter-varianten.png" alt="bp ceres filter varianten">
</div>
<div class="title">Bild 2. Varianten mit passenden Attributwerten</div>
</div>
</div>
<div class="sect2">
<h3 id="_facette_einrichten">5.3. Facette einrichten</h3>
<div class="paragraph">
<p>Unsere Filter werden mittels Facetten im Webshop abgebildet. Wir müssen also noch eine neue Facette einrichten und anschließend unsere Attributwerte und den gewünschten Mandanten mit dieser verknüpfen.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Einrichtung » Mandant » Global » Dienste » Facettensuche</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>Neu</strong>, um eine neue Facette hinzuzufügen.</p>
</li>
<li>
<p>Gib einen <strong>Namen</strong> für die Facette in der Systemsprache ein, z.B. <strong>Farbe</strong>.</p>
</li>
<li>
<p>Wähle den Typ <strong>Attribut/Merkmal</strong>.</p>
</li>
<li>
<p>Gib die Position ein, an der die Facette im Webshop erscheinen soll.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
</div>
<div class="sect2">
<h3 id="_attributwerte_mit_facette_verknüpfen">5.4. Attributwerte mit Facette verknüpfen</h3>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Einrichtung » Mandant » Global » Dienste » Facettensuche</strong>.</p>
</li>
<li>
<p>Öffne die Facette.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Name</strong>.</p>
</li>
<li>
<p>Gib die Übersetzungen für deine Facette ein.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Werte</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>Wert hinzufügen</strong>.</p>
</li>
<li>
<p>Gib den Namen ein, z.B. <strong>Rot</strong>.</p>
</li>
<li>
<p>Gib die Position ein.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.<br>
→ Der Facetten-Wert wird hinzugefügt.</p>
</li>
<li>
<p>Gib im Tab <strong>Name</strong> die Übersetzungen für deinen Facetten-Wert ein.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Verknüpfung</strong>.</p>
</li>
<li>
<p>Öffne das Attribut <strong>Attribute » Farbe » Rot</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>Verknüpfen</strong>.</p>
</li>
<li>
<p>Wiederhole die Schritte 6 bis 13 für den Wert <strong>Schwarz</strong>.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div id="filter-facetten" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-filter-facetten.png" alt="bp ceres filter facetten">
</div>
<div class="title">Bild 3. Verknüpfte Facetten-Werte</div>
</div>
</div>
<div class="sect2">
<h3 id="_mandanten_mit_facette_verknüpfen">5.5. Mandanten mit Facette verknüpfen</h3>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Einrichtung » Mandant » Mandant wählen » Dienste » Facettenverknüpfung</strong>.</p>
</li>
<li>
<p>Wähle die Facette aus.</p>
</li>
<li>
<p>Klicke auf <strong>Facette verknüpfen</strong>.<br>
→ Die Facette wird mit dem ausgewählten Mandanten verknüpft.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
</div>
<div class="sect2">
<h3 id="_plugin_bereitstellen">5.6. Plugin bereitstellen</h3>
<div class="paragraph">
<p>Nun stellen wir unser Plugin-Set noch einmal im Menü <strong>Plugins » Plugin Übersicht</strong> durch Klick auf <strong>Speichern &amp; Plugins bereitstellen</strong> bereit, um die Änderungen zu übernehmen und erhalten die Filter in der <strong>Suche</strong> und in der <strong>Kategorie-Ansicht</strong>.</p>
</div>
<div id="filter-frontend" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-filter-frontend.png" alt="bp ceres filter frontend">
</div>
<div class="title">Bild 4. Gewählter Filter in Kategorie-Ansicht</div>
</div>
</div>
</div>
</div><div class="sect1 adoc">
<h2 id="bestellmerkmale">6. Bestellmerkmale einrichten</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In diesem Best Practice richten wir ein Merkmal ein, mit dem man einen <strong>Text</strong> eingeben kann, der auf ein T-Shirt gedruckt werden soll. Bei einer Eingabe wird ein Aufpreis auf das Produkt berechnet.</p>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="title">Das Wichtigste vorab …</div>
<div class="ulist">
<ul>
<li>
<p>Hierbei handelt es sich um ein Best Practice für das Webshop-Plugin <strong>Ceres</strong>. <strong>Ceres</strong> ist im <a href="https://marketplace.plentymarkets.com/plugins/templates/Ceres_4697" target="_blank" rel="noopener">plentyMarketplace</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span> verfügbar und läuft auf plentymarkets Systemen.</p>
</li>
<li>
<p>Eine Integration in individuelle oder veränderte Template-Plugins ist möglich, bedarf aber individueller Anpassungen, die an dieser Stelle nicht berücksichtigt werden können.</p>
</li>
</ul>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="sect2">
<h3 id="_bestellmerkmal_anlegen">6.1. Bestellmerkmal anlegen</h3>
<div class="paragraph">
<p>Wir beginnen mit dem Merkmal.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Einrichtung » Artikel » Merkmale</strong>.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Neues Merkmal</strong>.</p>
</li>
<li>
<p>Gib bei <strong>Name (intern)</strong> die Bezeichnung ein, die das Merkmal in deinem Backend haben soll.</p>
</li>
<li>
<p>Unter <strong>Webshop</strong> gibst du bei <strong>Name</strong> die Bezeichnung ein, die deinem Kunden in der Artikelansicht angezeigt werden soll, in unserem Beispiel "T-Shirt-Druck".</p>
</li>
<li>
<p>Unter <strong>Merkmaltyp</strong> wählst du <strong>Text</strong> aus.</p>
</li>
<li>
<p>Unter <strong>Aufpreis</strong> gibst du die Kosten ein, die bei der Nutzung des Merkmals entstehen, z.B. 12,00 Euro für einen T-Shirt-Druck.<br>
→ Setze einen Haken bei <strong>Als Zusatzkosten darstellen</strong>, damit der Kunde in der Artikelansicht sieht, welchen Aufpreis er für das Merkmal zahlt.</p>
</li>
<li>
<p>Unter <strong>Anzeige</strong> setzt du einen Haken bei jeder Checkbox, um die Zusatzkosten im gesamten Bestellvorgang transparent zu halten.</p>
</li>
<li>
<p>Setze einen Haken bei <strong>Bestellmerkmal</strong>, um das Merkmal als solches festzulegen.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.<br>
→ Das Merkmal ist angelegt.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Deine Maske sollte nun aussehen wie hier:</p>
</div>
<div id="bestellmerkmale-einstellungen" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-bestellmerkmale-einstellungen.png" alt="bp ceres bestellmerkmale einstellungen">
</div>
<div class="title">Bild 5. Einstellungen des Bestellmerkmals</div>
</div>
</div>
<div class="sect2">
<h3 id="_bestellmerkmal_mit_artikel_verknüpfen">6.2. Bestellmerkmal mit Artikel verknüpfen</h3>
<div class="paragraph">
<p>Merkmale werden mit dem Artikel selbst verknüpft. Dazu gehst du wie folgt vor:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Artikel » Artikel bearbeiten</strong>.</p>
</li>
<li>
<p>Wähle einen Artikel, mit dem das Merkmal verknüpft werden soll.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Merkmale</strong>.</p>
</li>
<li>
<p>Setze unter <strong>Weitere Merkmale aktivieren » Merkmale ohne Gruppe</strong> einen Haken bei dem erstellten Merkmal.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.<br>
→ Das Merkmal ist mit dem Artikel verknüpft und wird unter <strong>Merkmale</strong> angezeigt.</p>
</li>
</ol>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="title">Aufpreise</div>
<div class="paragraph">
<p>Unter <strong>Merkmale</strong> kann abermals ein Aufpreis angegeben werden. Gibst du hier einen Wert ein, überschreibt dieser den im Merkmal hinterlegten Aufpreis.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div id="bestellmerkmale-artikel" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-bestellmerkmale-artikel.png" alt="bp ceres bestellmerkmale artikel">
</div>
<div class="title">Bild 6. Einstellungen am Artikel</div>
</div>
</div>
<div class="sect2">
<h3 id="_plugin_bereitstellen_2">6.3. Plugin bereitstellen</h3>
<div class="paragraph">
<p>Nun stellen wir unser Plugin-Set noch einmal durch Klcik auf <strong>Speichern &amp; Plugins bereitstellen</strong> bereit, um die Änderungen zu übernehmen, und erhalten das Bestellmerkmal in <strong>Artikelansicht</strong> und im <strong>Warenkorb</strong>.</p>
</div>
<div id="bestellmerkmale-artikelansicht" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-bestellmerkmale-artikelansicht.png" alt="bp ceres bestellmerkmale artikelansicht">
</div>
<div class="title">Bild 7. Artikelansicht im Webshop</div>
</div>
<div class="paragraph">
<p>Gibt der Kunde etwas in das Textfeld ein, wird der Text hinterlegt und der Aufpreis zum Artikelpreis addiert.</p>
</div>
<div id="bestellmerkmale-warenkorb" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-bestellmerkmale-warenkorb.png" alt="bp ceres bestellmerkmale warenkorb">
</div>
<div class="title">Bild 8. Artikelansicht im Warenkorb</div>
</div>
</div>
<div class="sect2">
<h3 id="_bestellmerkmal_als_checkbox_einrichten">6.4. Bestellmerkmal als Checkbox einrichten</h3>
<div class="paragraph">
<p>In diesem Best Practice richten wir ein Bestellmerkmal ein, welches als Checkbox in der Artikeleinzelansicht angezeigt wird. Beim Aktivieren der Checkbox wird ein Aufpreis auf das Produkt berechnet.</p>
</div>
<div class="sect3">
<h4 id="_merkmalgruppe_erstellen">6.4.1. Merkmalgruppe erstellen</h4>
<div class="paragraph">
<p>Zunächst legen wir eine neue Merkmalgruppe an. In unserem Beispiel möchten wir, dass Sofa-Zubehör über eine Checkbox zum Produkt dazu gebucht werden kann.</p>
</div>
<div class="olist arabic instruction">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Einrichtung » Artikel » Merkmale</strong>.</p>
</li>
<li>
<p>Öffne das Tab <strong>Neue Merkmalgruppe</strong>.</p>
</li>
<li>
<p>Gib bei <strong>Name (intern)</strong> einen Namen für die Merkmalgruppe im Backend ein.</p>
</li>
<li>
<p>Im Bereich <strong>Sprache</strong> kannst du für jede Sprache einen eigenen Namen und eine Beschreibung eingeben, die im Webshop angezeigt werden.</p>
</li>
<li>
<p>Wähle die Option <strong>Keine</strong> aus der Dropdown-Liste für <strong>Gruppierung von Bestellmerkmalen (Typ: "Kein")</strong>.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div id="bestellmerkmale-merkmalgruppe" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-bestellmerkmale-merkmalgruppe.png" alt="bp ceres bestellmerkmale merkmalgruppe">
</div>
<div class="title">Bild 9. Merkmalgruppe erstellen</div>
</div>
<div class="openblock collapseBox">
<div class="title">Merkmalgruppe erstellen</div>
<div class="content">
<div class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/BP-Ceres-Order-Property-Checkbox-1.gif" alt="BP Ceres Order Property Checkbox 1">
</div>
</div>
</div>
</div>
</div>
<div class="sect3">
<h4 id="_bestellmerkmal_anlegen_2">6.4.2. Bestellmerkmal anlegen</h4>
<div class="paragraph">
<p>Nachdem wir eine Merkmalgruppe für Sofa-Zubehör angelegt haben, möchten wir nun ein neues Merkmal, z.B. ein Sofakissen, anlegen und dieses mit der Merkmalgruppe verknüpfen.</p>
</div>
<div class="olist arabic instruction">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Einrichtung » Artikel » Merkmale</strong>.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Neues Merkmal</strong>.</p>
</li>
<li>
<p>Gib bei <strong>Name (intern)</strong> einen Namen für das Merkmal im Backend ein.</p>
</li>
<li>
<p>Im Bereich <strong>Webshop</strong> kannst du für jede Sprache einen eigenen Namen und eine Beschreibung eingeben, die im Webshop angezeigt werden.</p>
</li>
<li>
<p>Wähle bei <strong>Merkmalgruppe</strong> die eben erstellte Merkmalgruppe aus der Dropdown-Liste aus.</p>
</li>
<li>
<p>Wähle die Option <strong>Kein</strong> aus der Dropdown-Liste <strong>Merkmaltyp</strong> aus.</p>
</li>
<li>
<p>Unter <strong>Aufpreis</strong> gibst du die Kosten an, die bei der Nutzung des Merkmals entstehen, z.B. 15,00 Euro für ein Sofakissen.<br>
→ Setze einen Haken bei <strong>Als Zusatzkosten darstellen</strong>, damit der Kunde in der Artikelansicht sieht, welchen Aufpreis er für das Merkmal zahlt.</p>
</li>
<li>
<p>Setze im Bereich <strong>Anzeige</strong> die Haken an den Stellen, an denen das Merkmal angezeigt werden soll.</p>
</li>
<li>
<p>Aktiviere die Checkbox bei <strong>Bestellmerkmal</strong>.</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Das Bestellmerkmal <strong>Sofakissen</strong> wurde nun erfolgreich angelegt.</p>
</div>
<div id="bestellmerkmale-neues-merkmal" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-bestellmerkmale-neues-merkmal.png" alt="bp ceres bestellmerkmale neues merkmal">
</div>
<div class="title">Bild 10. Neues Bestellmerkmal anlegen</div>
</div>
</div>
<div class="sect3">
<h4 id="_bestellmerkmal_mit_artikel_verknüpfen_2">6.4.3. Bestellmerkmal mit Artikel verknüpfen</h4>
<div class="paragraph">
<p>Zu guter Letzt müssen wir die gewünschten Artikel mit dem gerade erstellten Bestellmerkmal verknüpfen.</p>
</div>
<div class="olist arabic instruction">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Artikel » Artikel bearbeiten</strong>.</p>
</li>
<li>
<p>Wähle einen Artikel, der mit dem erstellten Merkmal verknüpft werden soll.</p>
</li>
<li>
<p>Wechsle in das Tab <strong>Merkmale</strong>.</p>
</li>
<li>
<p>Setze unter <strong>Weitere Merkmale aktivieren</strong> einen Haken bei dem Merkmal in der erstellten Merkmalgruppe .</p>
</li>
<li>
<p><strong>Speichere</strong> die Einstellungen.<br>
→ Das Merkmal wird mit dem Artikel verknüpft.</p>
</li>
</ol>
</div>
<div id="bestellmerkmal-verknuepfung" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-bestellmerkmale-verknuepfung.png" alt="bp ceres bestellmerkmale verknuepfung">
</div>
<div class="title">Bild 11. Bestellmerkmal mit Artikel verknüpfen</div>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="title">Änderungen anzeigen</div>
<div class="paragraph">
<p>Bitte beachten Sie, dass es etwa 15 Minuten dauern kann, bis die Änderungen im Webshop abgezeigt werden, da dies das Intervall ist, in dem der ElasticSearch Index erneuert wird.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div>
</div><div class="sect1 adoc">
<h2 id="cross-selling">7. Cross-Selling einrichten</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Diese Best Practice Anleitung unterstützt Sie beim Einrichten von Cross-Selling-Artikellisten in Ceres.</p>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="title">Das Wichtigste vorab …​</div>
<div class="ulist">
<ul>
<li>
<p>Hierbei handelt es sich um ein Best Practice für das Webshop-Plugin <strong>Ceres</strong>. <strong>Ceres</strong> ist im <a href="https://marketplace.plentymarkets.com/plugins/templates/Ceres_4697" target="_blank" rel="noopener">plentyMarketplace</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span> verfügbar und läuft auf plentymarkets Systemen.</p>
</li>
<li>
<p>Dieses Best Practice setzt voraus, dass bereits Cross-Selling-Beziehungen am Artikel hinterlegt sind. Wie Sie Cross-Selling-Einstellungen für Ihre Artikel vornehmen, erfahren Sie <a href="#artikel/webshop/cross-selling">hier</a>.</p>
</li>
</ul>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="sect2">
<h3 id="_cross_selling_artikellisten_konfigurieren">7.1. Cross-Selling-Artikellisten konfigurieren</h3>
<div class="paragraph">
<p>Öffnen Sie das Menü  <strong>Plugins » Plugin-Übersicht » Ceres » Konfiguration » Item lists</strong>. Hier stellen Sie ein, welche Art von Artikellisten Sie in Ihrem Webshop verwenden wollen.
Im Feld <strong>Cross-selling: Cross-selling relation</strong> (Punkt 1 im Bild) wählen Sie den Typ der Cross-Selling Beziehung aus, den Ihre Artikelliste abbilden soll.
Ihnen stehen dabei die Optionen <strong>Similiar</strong> (für ähnliche Artikel), <strong>Accessory</strong> (für Zubehör), <strong>Replacement part</strong> (für Ersatzteile) oder <strong>Collection</strong> (für Artikelpakete) zur Verfügung.
Diese Auswahl bezieht sich auf alle Cross-Selling-Artikellisten, die Sie in Ihrem Webshop einrichten möchten.</p>
</div>
<div class="paragraph">
<p>Im nächsten Schritt legen Sie fest, welche Artikeliste genutzt werden soll.
Hierfür bearbeiten Sie das Feld <strong>First item list</strong>, <strong>Second item list</strong> oder <strong>Third item list</strong> und wählen <strong>Cross-selling</strong> aus der Dropdown-Liste. Im unteren Beispiel wurde die <strong>Second item list</strong> bearbeitet (Punkt 2 im Bild).
In den Eingabefeldern <strong>Name of the second item list (DE)</strong> und <strong>Name of the second item list (EN)</strong> kann nun noch ein Name für die Artikelliste definiert werden, jeweils für die deutschsprachige und die englischsprachige Ansicht.</p>
</div>
<div class="paragraph">
<p>Wenn Sie alle Einstellungen getroffen haben, klicken Sie auf <strong>Speichern</strong>.</p>
</div>
<div id="cross-selling-einstellungen" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-cross-selling-konfig.png" alt="bp ceres cross selling konfig">
</div>
<div class="title">Bild 12. Cross-Selling einrichten</div>
</div>
</div>
<div class="sect2">
<h3 id="_cross_selling_artikellisten_im_webshop_anzeigen">7.2. Cross-Selling-Artikellisten im Webshop anzeigen</h3>
<div class="paragraph">
<p>Nachdem Sie festgelegt haben, welche Artikelliste für Cross-Selling verwendet werden soll, legen Sie nun fest, an welcher Stelle im Webshop die Artikelliste angezeigt werden soll.</p>
</div>
<div class="paragraph">
<p>Öffnen Sie das Menü <strong>CMS » Container-Verknüpfungen</strong>.
Hier scrollen Sie zu der Artikelliste, die Sie als Cross-Selling-Artikelliste konfigueriert haben, also <strong>First item list</strong>, <strong>Second item list</strong> oder <strong>Third item list</strong>.
Nun wählen Sie den Layout-Container, in dem Sie die Artikelliste anzeigen lassen möchten. Im unteren Beispiel lassen wir die zweite Artikelliste im Container der Artikeleinzelansicht anzeigen.</p>
</div>
<div id="artikelliste-container" class="imageblock">
<div class="content">
<img src="{{plugin_path('PlentyManual')}}/images/_best-practices/omni-channel/online-shop/assets/bp-ceres-cross-selling-container.png" alt="bp ceres cross selling container">
</div>
<div class="title">Bild 13. Container für Artikelliste wählen</div>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="title">Änderungen anzeigen</div>
<div class="paragraph">
<p>Bitte beachten Sie, dass es etwa 15 Minuten dauern kann, bis die Änderungen im Webshop abgezeigt werden, da dies das Intervall ist, in dem der ElasticSearch Index erneuert wird.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div><div class="sect1 adoc">
<h2 id="weitere-cross-selling-listen">8. Weitere Cross-Selling Artikellisten anzeigen</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Da Ceres nativ nur eine Cross-Selling Artikelliste gleichzeitig abbildet, erfährst du in diesem Best Practice, welche Anpassungen erforderlich sind, damit du mehrere unterschiedliche Cross-Selling Artikellisten in deinem Ceres Webshop verwenden kannst. Diese Anleitung richtet sich primär an erfahrene Nutzer:innen, da die Einbindung von mehreren Cross-Selling Listen gegenwärtig über ein eigens angepasstes Theme-Plugin geschehen muss.</p>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="paragraph">
<p>Beachte dass du deinem Theme im Menü <strong>Plugins » Plugin Übersicht</strong> eine Positionsnummer zuweist, die zwischen <strong>IO</strong> und <strong>Ceres</strong> liegt.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="sect2">
<h3 id="_context_klasse_erstellen">8.1. Context-Klasse erstellen</h3>
<div class="paragraph">
<p>Da die Einbindung der Cross-Selling Listen über die Erweiterung der SingleItem-Context-Klasse erfolgt, musst du zunächst eine PHP Context-Klasse in deinem Theme erstellen.</p>
</div>
<div class="paragraph">
<p>Lege in deinem Theme zunächst einen Ordner <strong>Contexts</strong> im <strong>src</strong> Ordner an. In dem Contexts-Ordner erstellst du nun eine PHP-Datei für deine eigene Context-Klasse, beispielsweise MyThemeContext.php.</p>
</div>
<div class="paragraph">
<p>Im nächsten Schritt fügst du den folgenden Code in diese Datei ein. Die erste Cross-Selling-Artikelliste, die wir hier einbauen, ist vom Typ Zubehör:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">&lt;?php
namespace ThemeName\Contexts;

use IO\Helper\ContextInterface;
use Ceres\Contexts\SingleItemContext;

use IO\Services\ItemSearch\Services\ItemSearchService;
use IO\Services\ItemSearch\SearchPresets\CrossSellingItems;

class MyThemeContext extends SingleItemContext implements ContextInterface
{
	public $accessory;

	public function init($params)
	{
		parent::init($params);
		$options = array(
        			"itemId" =&gt; $this-&gt;item['documents'][0]['data']['item']['id'],
        			"relation" =&gt; "Accessory"      // Nutze die Liste Zubehoer
       		);
     		$searchfactory = CrossSellingItems::getSearchFactory( $options );
     		$searchfactory-&gt;setPage(1, 4); // Begrenze auf 4 Artikel
      		$result = pluginApp(ItemSearchService::class)-&gt;getResult($searchfactory);
      		$this-&gt;accessory = $result['documents'];
	}
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>Nun speicherst du diese Datei und passt nun in 2 Schritten den Provider in deinem Theme an. Öffne die Datei des Providers unter dem Pfad <strong>/src/Providers/MyThemeServiceProvider.php</strong>.</p>
</div>
<div class="paragraph">
<p>Füge oben in der Datei die Zeile <code>use Theme\Contexts\MyThemeContext;</code> ein, damit der neu erstellte Kontext vom ServiceProvider berücksichtigt wird.</p>
</div>
<div class="paragraph">
<p>Zusätzlich fügst du nun innerhalb der <strong>boot</strong> Funktion folgenden Code ein:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">$eventDispatcher-&gt;listen('IO.ctx.item', function (TemplateContainer $templateContainer, $templateData = [])
   {
       $templateContainer-&gt;setContext( MyThemeContext::class);
       return false;
   }, 0);</code></pre>
</div>
</div>
<div class="paragraph">
<p>Speichere die Datei. Damit sind die Vorbereitungen für deine Context-Klasse abgeschlossen.</p>
</div>
</div>
<div class="sect2">
<h3 id="_singleitemview_twig_anpassen">8.2. SingleItemView.twig anpassen</h3>
<div class="paragraph">
<p>Um nun Cross-Selling-Listen in der Artikeleinzelansicht auszugeben, musst du die <strong>&lt;single-item&gt;-Komponente</strong> in einem Theme anpassen. In der Ordnerstruktur des unveränderten Ceres liegt die Datei unter <strong>/resources/views/item/SingleItemView.twig</strong>; diese muss von deinem Theme überschrieben werden, damit die von dir vorgenommenen Änderungen bei einem Update von Ceres und IO nicht verloren gehen.</p>
</div>
<div class="paragraph">
<p>Füge den folgenden Code vor dem schließenden <strong>&lt;/single-item&gt;</strong>-Tag in der Komponente ein:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">&lt;div slot="CrossSellingAccessory"&gt;
	{{ component("Ceres::Containers.Components.ContainerItemList") }}
	&#123;&#37; if accessory|length &gt; 0 &#37;&#125;
        		&lt;div class="crossSelling"&gt;
        			&lt;span class="h3"&gt;Das passt dazu:&lt;/span&gt;
        			&lt;container-item-list :items="{{ accessory|json_encode }}"&gt;&lt;/container-item-list&gt;
      		&lt;/div&gt;
	&#123;&#37; endif &#37;&#125;
   &lt;/div&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Passe gegebenenfalls die Überschrift an. Nachdem der Slot für die Cross-Selling Liste definiert wurde, kannst du ihn über <code>&lt;slot name="CrossSellingAccessory"&gt;&lt;/slot&gt;</code> in der gewünschten Komponente (/resources/views/Item/Components/) einbauen. Wo du den Code eingeben musst, ist davon abhängig an welcher Stelle der Artikelansicht die Artikelliste erscheinen soll.</p>
</div>
<div class="paragraph">
<p>Sobald das Plugin-Set erneut gespeichert und bereitgestellt wurde, wird die Cross-Selling-Artikelliste vom Typ Zubehör an der gewählten Stelle angezeigt.</p>
</div>
</div>
<div class="sect2">
<h3 id="_weitere_cross_selling_listen_einbauen">8.3. Weitere Cross-Selling-Listen einbauen</h3>
<div class="paragraph">
<p>Um eine weitere Cross-Selling-Liste in Ceres darzustellen, muss die ursprünglich erstelle Context-Klasse erweitert werden:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">&lt;?php
namespace ThemeName\Contexts;

use IO\Helper\ContextInterface;
use Ceres\Contexts\SingleItemContext;

use IO\Services\ItemSearch\Services\ItemSearchService;
use IO\Services\ItemSearch\SearchPresets\CrossSellingItems;

class MyThemeContext extends SingleItemContext implements ContextInterface
{
	public $accessory;
  public $similar;

	public function init($params)
	{
		parent::init($params);
		$options = array(
        			"itemId" =&gt; $this-&gt;item['documents'][0]['data']['item']['id'],
        			"relation" =&gt; "Accessory"      // Nutze die Liste Zubehoer
       		);
     		$searchfactory = CrossSellingItems::getSearchFactory( $options );
     		$searchfactory-&gt;setPage(1, 4); // Begrenze auf 4 Artikel
      		$result = pluginApp(ItemSearchService::class)-&gt;getResult($searchfactory);
      		$this-&gt;accessory = $result['documents'];

    $options = array(
              "itemId" =&gt; $this-&gt;item['documents'][0]['data']['item']['id'],
              "relation" =&gt; "Similar"      // Nutze die Liste Ähnlich
          );
        $searchfactory = CrossSellingItems::getSearchFactory( $options );
      	$searchfactory-&gt;setPage(1, 4); // Begrenze auf 4 Artikel
        	$result = pluginApp(ItemSearchService::class)-&gt;getResult($searchfactory);
        	$this-&gt;similar= $result['documents'];
	}
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>Hier wurde unter <code>public $accessory;</code> zusätzlich <code>public $similar;</code> eingefügt; um die Cross-Selling-Liste vom Typ <strong>Ersatzteil</strong> darzustellen, müsste hier <code>public $replacementPart</code> verwendet werden.</p>
</div>
<div class="paragraph">
<p>Weiterhin wurde unterhalb von <code>$this→accessory = $result[0]['documents'];</code> ein zusätzlicher Codeblock eingefügt, bei dem <code>"relation" ⇒ "Accessory"</code> durch <code>"relation" ⇒ "Similar"</code> ersetzt wurde; für Listen vom Typ Ersatzteil verwendest du hier <code>"relation" ⇒ "ReplacementPart"</code>.</p>
</div>
<div class="paragraph">
<p>Wie oben beschrieben, erstellst du nun noch einen neuen Slot in der &lt;single-item&gt;-Komponente und rufst diesen an der gewünschten Stelle auf.</p>
</div>
<hr>
<div class="paragraph">
<p>Danke an Jens Volke für das Vorformulieren dieses HowTos. Den ursprünglichen Beitrag findet ihr hier im <a href="https://forum.plentymarkets.com/t/howto-weitere-cross-selling-listen-anzeigen-aehnliche-artikel-zubehoer-ersatzteil/495795" target="_blank" rel="noopener">Forum</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span></p>
</div>
</div>
</div>
</div><div class="sect1 adoc">
<h2 id="eigenschaften-basket">9. Eigenschaften im Warenkorb und im Checkout ausgeben</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Da Ceres zum gegenwärtigen Zeitpunkt die Ausgabe von <strong>Eigenschaften</strong> im Warenkorb und im Checkout noch nicht unterstützt, hilft dir dieses Best Practice dabei, den Code in deinem Theme so anzupassen, dass du die Eigenschaften, die du ausgeben möchtest, im Warenkorb anzeigen lassen kannst. Da der Checkout dafür die gleiche Komponente verwendet wie der Warenkorb, reicht es aus, die eine beschriebene Komponente anzupassen.</p>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="paragraph">
<p>Du solltest die beschriebenen Anpassungen in einem eigenen Theme-Plugin verbauen, damit die Änderungen nicht bei einem Ceres-Update überschrieben werden. Du kannst die Anpassungen auch im Ceres-Plugin selbst durchführen, allerdings wirst du die betreffende Stelle dadurch nach jedem Ceres-Update erneut anpassen müssen, da dein Ceres durch das Update überschrieben wird.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="sect2">
<h3 id="_basketlistitem_twig_anpassen">9.1. BasketListItem.twig anpassen</h3>
<div class="paragraph">
<p>Im ersten Schritt suchst du in der Dateistruktur des Ceres-Plugins die Komponente BasketListItem.twig unter <strong>/resources/views/Basket/Components/BasketListItem.twig</strong>. Dies ist die Komponente für Warenkorbartikel und muss angepasst werden, um Eigenschaften im Warenkorb darzustellen. In Zeile 101 der Komponente findest du die folgende Zeile:<br>
<code>&lt;div class="item-properties" v-if="basketItem.basketItemOrderParams.length"&gt;</code><br>
Binde nun darüber den folgenden Code ein:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">&lt;div class="item-properties" v-if="basketItem.variation.data.variationProperties"&gt;
    &lt;template v-for="i in [5, 6, 2, 3]"&gt;
        &lt;template v-for="property in basketItem.variation.data.variationProperties"&gt;
            &lt;template v-if="property.property.id === i"&gt;
                &lt;div&gt;
                    &lt;span v-text="property.property.names.name"&gt;&lt;/span&gt;
                    &lt;strong v-html="property.values &amp;&amp; property.values.value"&gt;&lt;/strong&gt;
                &lt;/div&gt;
            &lt;/template&gt;
        &lt;/template&gt;
    &lt;/template&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Die CSS-Klasse "item-properties" wurde hier nur zu Illustrationszwecken aufgeführt und steht stellvertretend für die Möglichkeit, eine CSS-Klasse hier angeben zu können.<br></p>
</div>
<div class="paragraph">
<p>Das Array in Zeile 2 des Code-Snippets (<code>&lt;template v-for="i in [5, 6, 2, 3]"&gt;</code>) enthält die IDs der Eigenschaften, die du im Warenkorb ausgeben möchtest, in diesem Beispiel also die Eigenschaften mit den IDs 5, 6, 2 und 3. Die IDs der Eigenschaften müssen <strong>kommasepariert</strong> eingegeben werden. Sie werden in der Reihenfolge im Warenkorb angezeigt, in der sie im Array angegeben sind. Die IDs deiner Eigenschaften findest du im Menü <strong>Einrichtung » Einstellungen » Eigenschaften » Konfiguration</strong>.<br></p>
</div>
<div class="paragraph">
<p>Die 3 <code>&lt;template&gt;</code>-Tags im Code-Snippet werden nicht im Frontend ausgegeben, sondern dienen hier als Schleifenelement, um über die einzelnen Eigenschaften zu iterieren. Diese solltest du nicht anpassen.+</p>
</div>
<div class="paragraph">
<p>Das <code>&lt;span&gt;</code>-Element gibt den Namen der Eigenschaft aus. Dieses Element kann durch andere Elemente, wie etwa ein <code>&lt;p&gt;</code>-Tag oder ein <code>&lt;strong&gt;</code>-Tag ersetzt werden. Die v-text Direktive darf allerdings nicht entfernt werden.<br></p>
</div>
<div class="paragraph">
<p>Im <code>&lt;strong&gt;</code>-Element wird, falls vorhanden, der Wert der jeweiligen Eigenschaft ausgegeben. Die hier verwendete Direktive ist <strong>v-html</strong> und nicht <strong>v-text</strong>, damit gegebenenfalls HTML-Formatierungen von Texteigenschaften berücksichtigt werden.<br></p>
</div>
<div class="paragraph">
<p>Im zweiten Schritt müssen nun 2 Ergebnisfelder ergänzt werden.</p>
</div>
</div>
<div class="sect2">
<h3 id="_basketitem_fields_json_anpassen">9.2. BasketItem.fields.json anpassen</h3>
<div class="paragraph">
<p>Suche nun die Datei BasketItem.fields.json unter /resources/views/ResultFields/BasketItem.fields.json. In dieser Datei musst du die beiden Ergebnisfelder "variationProperties.values" und "variationProperties.property.id" hinzufügen. Bitte achte darauf, dass du nach jedem Ergebnisfeld außer dem letzten Feld in der JSON-Datei ein Komma setzt, sodass die Datei weiterhin valides JSON enthält.<br></p>
</div>
<div class="paragraph">
<p>Speichere deine Änderungen und stelle das Plugin-Set neu bereit. Deine Eigenschaften sollten nun im Warenkorb sowie in der Warenkorbübersicht im Checkout angezeigt werden.</p>
</div>
</div>
</div>
</div><div class="sect1 adoc">
<h2 id="vat">10. Hinweise zur Senkung der Mehrwertsteuer (01.07.2020)</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Zum 01.07.2020 wird der gesetzliche Mehrwertsteuersatz gesenkt. Hierbei kann es zu Problemfällen kommen, wenn Bestellungen vor dem 01.07. getätigt werden (bei denen also der vorherige Satz greift und im Webshop angezeigt wurde), aber erst nach dem 01.07. versendet werden (und demnach unter den gesenkten Satz fallen müssten). Um diesen Problemfällen entgegenzuwirken, empfehlen wir, einerseits sämtliche explizite Verweise auf den anzuwendenden Mehrwertsteuersatz aus dem Webshop zu entfernen und andererseits auch alle Auflistungen von Nettopreisen (für B2C-Verkäufe), bzw. Bruttopreisen (für B2B-Verkäufe) zu entfernen, da diese als Berechnungsgrundlage für die zugrundeliegenden Steuersätze genutzt werden können.<br></p>
</div>
<div class="paragraph">
<p>Weitere Informationen zur Rechtsgrundlage findet ihr <a href="https://legal.trustedshops.com/blog/2020/06/12/mehrwertsteuersenkung-ab-1.-juli-darauf-muessen-sie-unbedingt-achten?uuid=311ded301b1da873edd8ab27a986bdb5&amp;utm_source=email&amp;utm_medium=newsletter&amp;utm_campaign=country_de&amp;utm_content=26-2020" target="_blank" rel="noopener">im Blog von Trusted Shops</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span>.<br></p>
</div>
<div class="paragraph">
<p>Wenn du ein eigenes Theme im Einsatz hast, ist es möglich, dass du weitere Stellen im Webshop anpassen musst, an denen Preise oder Mehrwertsteuersätze ausgegeben werden. Diese individuellen Fälle können wir in diesem Best Practice nicht abbilden.</p>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="paragraph">
<p>Du solltest die folgenden Anpassungen in einer Kopie deines aktiven Plugin-Sets durchführen. Du kannst die angepasste Plugin-Set-Kopie dann vor dem Stichtag aktivieren und später, nachdem alle Bestellungen bearbeitet wurden, die vor dem Stichtag getätigt, aber erst nach dem Stichtag versendet wurden, auf dein altes Plugin-Set wechseln, damit Preise und explizite Mehrwertsteuersätze wieder wie vorher im Webshop angezeigt werden. Weitere Informationen zur Arbeit mit Plugin-Sets <a href="/plugins/hinzugefuegte-plugins-installieren">findest du hier</a>.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="sect2">
<h3 id="_css_anpassungen">10.1. CSS-Anpassungen</h3>
<div class="paragraph">
<p>Um sämtliche Verweise auf Nettopreise in deinem Webshop auszublenden, muss das CSS angepasst werden. Am einfachsten ist es, dafür <a href="https://marketplace.plentymarkets.com/plugins/storefront/widgets/cfourcustomcssjs_5143">das Plugin Custom CSS/JS im Frontend</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span> zu verwenden.</p>
</div>
<div class="paragraph">
<p>Füge das Plugin deinem plentymarkets System hinzu <a href="/plugins/plugins-system-hinzufuegen">wie hier beschrieben</a>. Danach <a href="/plugins/hinzugefuegte-plugins-installieren">installierst du das Plugin</a>.</p>
</div>
<div class="paragraph">
<p>Nachdem das Plugin installiert wurde, öffnest du die Plugin-Einstellungen über die Aktion <strong>Einstellungen</strong>. Im Tab <strong>Stylesheets</strong> findest du ein Textfeld für <strong>CSS</strong>, in welches du den folgenden Code-Schnipsel einfügst:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">.cmp-totals dl dt:not(.font-weight-bold),
.cmp-totals dl dd:not(.font-weight-bold),
.cmp-totals .vatTotals,
.cmp-totals hr {
    display: none;
}

.cmp-totals dl {
    margin-bottom: 0;
}

.cmp-totals .vat-change,
.cmp-totals .totalSum hr {
    display: block !important;
}

.cmp-totals .rebate-hint {
    display: inline-block !important;
}</code></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Speichere</strong> deine Änderungen. <strong>Aktiviere</strong> das Plugin in deinem Plugin-Set.
Nach dem erneuten Bereitstellen deines Plugin-Sets werden keine Nettopreise mehr in deinem Webshop angezeigt.</p>
</div>
</div>
<div class="sect2">
<h3 id="_anpassungen_im_shopbuilder">10.2. Anpassungen im ShopBuilder</h3>
<div class="paragraph">
<p>Im ShopBuilder musst du 2 Seiten anpassen: den Warenkorb und den Checkout. Auf diesen Seiten musst du jeweils ein Code-Widget einfügen.</p>
</div>
<div class="sect3">
<h4 id="_code_widgets_platzieren">10.2.1. Code-Widgets platzieren</h4>
<div class="paragraph">
<p>Um deinen Webshop auch in der Übergangszeit rechtssicher zu betreiben, musst du einen Hinweis ausgeben, dass sich die angezeigten Preise inklusive Mehrwertsteuer (für B2C-Verkäufe), bzw. zuzüglich Mehrwertsteuer (für B2B-Verkäufe) verstehen. Damit dieser Hinweis auch automatisch in anderen Sprachen, die du pflegst, ausgegeben wird, verwenden wir dafür den Mehrsprachigkeits-Eintrag <strong>Ceres::Template.itemInclVAT</strong> für B2C- und <strong>Ceres::Template.itemExclVAT</strong> für B2B-Kund:innen. Dadurch wird B2C-Kund:innen der Preis als Bruttopreis inklusive Mehrwertsteuer, und B2B-Kund:innen der Nettopreis exklusive Mehrwertsteuer angezeigt.</p>
</div>
<div class="olist instruction">
<ol class="instruction">
<li>
<p>Öffne das Menü <strong>CMS » Mehrsprachigkeit</strong>.</p>
</li>
<li>
<p>Klappe den Bereich <strong>Artikel</strong> aus.</p>
</li>
<li>
<p>Überprüfe den Text in den Einträgen <strong>itemInclVAT</strong> und <strong>itemExclVAT</strong> und passe diese ggf. in deinen Webshop-Sprachen an.</p>
</li>
<li>
<p><strong>Speichere</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) die Einstellungen.</p>
</li>
<li>
<p><strong>Speichere</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) das Plugin-Set im Menü <strong>Plugins » Plugin-Set-Übersicht</strong>.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Öffne nun den ShopBuilder unter <strong>CMS » ShopBuilder</strong>. Auf deinen Inhalten für den Warenkorb und den Checkout musst du nun ein Code-Widget unterhalb der Summen-Widgets platzieren. In jedes dieser Code-Widgets fügst du den folgenden Code ein:<br></p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">&lt;div class="vat-change mb-2" v-if="!$store.state.basket.data.isExportDelivery &amp;&amp; !$store.state.basket.showNetPrices"&gt;{{ trans("Ceres::Template.itemInclVAT") }}&lt;/div&gt;
&lt;div class="vat-change mb-2" v-if="!$store.state.basket.data.isExportDelivery &amp;&amp; $store.state.basket.showNetPrices"&gt;{{ trans("Ceres::Template.itemExclVAT") }}&lt;/div&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Speichere</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) die Änderungen an deinem ShopBuilder-Inhalt.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_anpassungen_an_ceres_templates">10.3. Anpassungen an Ceres-Templates</h3>
<div class="paragraph">
<p>Es gibt 2 Stellen im Webshop, auf denen der Mehrwertsteuer-Hinweis nicht über den ShopBuilder eingefügt werden kann: die Auftragshistorie und die Warenkorbvorschau. Um trotzdem rechtssicher verkaufen zu können, kannst du 3 kleine Code-Stellen im Ceres-Plugin anpassen, um den Hinweis auch an diesen Stellen ausgeben zu lassen. Die Anpassungen am Code, sorgen dafür, dass der gleiche Text aus der Mehrsprachigkeit genommen wird, der auch in den Code-Widgets angezeigt wird, die du vorher im ShopBuilder hinzugefügt hast.<br></p>
</div>
<div class="paragraph">
<p>Die 3 Anpassungen sind im Folgenden detailliert aufgeführt. Wir haben zusätzlichen einen Pull Request offen, in dem du die Code-Änderungen direkt nachverfolgen kannst. Diesen Pull Request findest du <a href="https://github.com/plentymarkets/plugin-ceres/compare/fix%2Fvat_changes?diff=unified&amp;expand=1">auf GitHub</a>&nbsp;<span class="icon "><i class="fa fa-external-link  "></i></span>. Scrolle auf der Seite weiter nach unten, um die Datei-Änderungen einzusehen.</p>
</div>
<div class="sect3">
<h4 id="_auftragshistorie_anpassen">10.3.1. Auftragshistorie anpassen</h4>
<div class="paragraph">
<p>Um den Hinweis zur Mehrwersteuer auch in der Auftragshistorie im Mein Konto-Bereich anzuzeigen, musst du ein Code-Schnipsel in einer Template-Datei einfügen. Gehe dafür wie im Folgenden beschrieben vor:</p>
</div>
<div class="olist instruction">
<ol class="instruction">
<li>
<p>Öffne das Menü <strong>Plugins » Plugin-Set-Übersicht</strong>.</p>
</li>
<li>
<p>Klicke in der Zeile deiner Plugin-Set-Kopie auf die Aktion <strong>Plugin-Set bearbeiten</strong>.<br>
→ Das Plugin-Set wird geöffnet.</p>
</li>
<li>
<p>Klicke in der Zeile des Plugins <strong>Ceres</strong> auf die Aktion <strong>Einstellungen</strong>.<br>
→ Die Ceres-Einstellungen werden geöffnet.</p>
</li>
<li>
<p>Klicke links im Navigationsbaum auf den Tab <strong>Dateien</strong>.<br>
→ Die Dateistruktur des Plugins wird geöffnet.</p>
</li>
<li>
<p>Klicke auf den Ordner <strong>resources</strong>.</p>
</li>
<li>
<p>Klicke darin auf den Ordner <strong>views</strong>.</p>
</li>
<li>
<p>Klicke darin auf den Ordner <strong>Checkout</strong>.</p>
</li>
<li>
<p>Klicke darin auf den Ordner <strong>Macros</strong>.</p>
</li>
<li>
<p>Klicke auf die Datei <strong>OrderTotals.twig</strong>.<br>
→ Die Datei wird im Editor geöffnet.</p>
</li>
<li>
<p>Füge den unten aufgeführten Code nach dem <code>&#123;&#37; endif &#37;&#125;</code>-Element in Zeile 186 in einer neuen Zeile ein.</p>
</li>
<li>
<p><strong>Speichere</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) deine Änderungen.</p>
</li>
</ol>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">&lt;dt class="w-100 vat-change mb-2" v-if="!$store.state.basket.data.isExportDelivery &amp;&amp; !$store.state.basket.showNetPrices"&gt;{{ trans("Ceres::Template.itemInclVAT") }}&lt;/dt&gt;
&lt;dt class="w-100 vat-change mb-2" v-if="!$store.state.basket.data.isExportDelivery &amp;&amp; $store.state.basket.showNetPrices"&gt;{{ trans("Ceres::Template.itemExclVAT") }}&lt;/dt&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Durch diese Anpassung wird der Text, der in der Mehrsprachigkeit in den Einträgen <strong>itemInclVAT</strong> und <strong>itemExclVAT</strong> hinterlegt sind, auch in der Auftragshistorie angezeigt.</p>
</div>
</div>
<div class="sect3">
<h4 id="_standard_header_anpassen">10.3.2. Standard-Header anpassen</h4>
<div class="paragraph">
<p>Für ShopBuilder-Inhalte, bei denen du keinen eigenen Header verwendest, muss der Standard-Header angepasst werden, damit der Hinweis zur Mehrwertsteuer auch in der Warenkorbvorschau angezeigt wird. Gehe dafür wie im Folgenden beschrieben vor:</p>
</div>
<div class="olist instruction">
<ol class="instruction">
<li>
<p>Öffne das Menü <strong>Plugins » Plugin-Set-Übersicht</strong>.</p>
</li>
<li>
<p>Klicke in der Zeile deiner Plugin-Set-Kopie auf die Aktion <strong>Plugin-Set bearbeiten</strong>.<br>
→ Das Plugin-Set wird geöffnet.</p>
</li>
<li>
<p>Klicke in der Zeile des Plugins <strong>Ceres</strong> auf die Aktion <strong>Einstellungen</strong>.<br>
→ Die Ceres-Einstellungen werden geöffnet.</p>
</li>
<li>
<p>Klicke links im Navigationsbaum auf den Tab <strong>Dateien</strong>.<br>
→ Die Dateistruktur des Plugins wird geöffnet.</p>
</li>
<li>
<p>Klicke auf den Ordner <strong>resources</strong>.</p>
</li>
<li>
<p>Klicke darin auf den Ordner <strong>views</strong>.</p>
</li>
<li>
<p>Klicke darin auf den Ordner <strong>PageDesign</strong>.</p>
</li>
<li>
<p>Klicke darin auf den Ordner <strong>Partials</strong>.</p>
</li>
<li>
<p>Klicke darin auf den Ordner <strong>Header</strong>.</p>
</li>
<li>
<p>Klicke auf die Datei <strong>DefaultHeader.twig</strong>.<br>
→ Die Datei wird im Editor geöffnet.</p>
</li>
<li>
<p>Füge den unten aufgeführten Code nach Zeile 118 in einer neuen Zeile ein.</p>
</li>
<li>
<p><strong>Speichere</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) deine Änderungen.</p>
</li>
</ol>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">&lt;div class="vat-change mb-2" v-if="!$store.state.basket.data.isExportDelivery &amp;&amp; !$store.state.basket.showNetPrices"&gt;{{ trans("Ceres::Template.itemInclVAT") }}&lt;/div&gt;
&lt;div class="vat-change mb-2" v-if="!$store.state.basket.data.isExportDelivery &amp;&amp; $store.state.basket.showNetPrices"&gt;{{ trans("Ceres::Template.itemExclVAT") }}&lt;/div&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Durch diese Anpassung wird der Text, der in der Mehrsprachigkeit in den Einträgen <strong>itemInclVAT</strong> und <strong>itemExclVAT</strong> hinterlegt sind, auch in der Warenkorbvorschau des Standard-Headers angezeigt.</p>
</div>
</div>
<div class="sect3">
<h4 id="_eigenen_shopbuilder_header_anpassen">10.3.3. Eigenen ShopBuilder-Header anpassen</h4>
<div class="paragraph">
<p>Für ShopBuilder-Inhalte, für die du einen eigenen Header angelegt hast, muss der Code des Top Bar-Widgets angepasst werden, damit der Hinweis zur Mehrwertsteuer auch in der Warenkorbvorschau angezeigt wird. Gehe dafür wie im Folgenden beschrieben vor:</p>
</div>
<div class="olist instruction">
<ol class="instruction">
<li>
<p>Öffne das Menü <strong>Plugins » Plugin-Set-Übersicht</strong>.</p>
</li>
<li>
<p>Klicke in der Zeile deiner Plugin-Set-Kopie auf die Aktion <strong>Plugin-Set bearbeiten</strong>.<br>
→ Das Plugin-Set wird geöffnet.</p>
</li>
<li>
<p>Klicke in der Zeile des Plugins <strong>Ceres</strong> auf die Aktion <strong>Einstellungen</strong>.<br>
→ Die Ceres-Einstellungen werden geöffnet.</p>
</li>
<li>
<p>Klicke links im Navigationsbaum auf den Tab <strong>Dateien</strong>.<br>
→ Die Dateistruktur des Plugins wird geöffnet.</p>
</li>
<li>
<p>Klicke auf den Ordner <strong>resources</strong>.</p>
</li>
<li>
<p>Klicke darin auf den Ordner <strong>views</strong>.</p>
</li>
<li>
<p>Klicke darin auf den Ordner <strong>Widgets</strong>.</p>
</li>
<li>
<p>Klicke darin auf den Ordner <strong>Header</strong>.</p>
</li>
<li>
<p>Klicke auf die Datei <strong>TopBarWidget.twig</strong>.<br>
→ Die Datei wird im Editor geöffnet.</p>
</li>
<li>
<p>Füge den unten aufgeführten Code nach Zeile 210 in einer neuen Zeile ein.</p>
</li>
<li>
<p><strong>Speichere</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) deine Änderungen.</p>
</li>
</ol>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlightjs highlight"><code class="language-plenty hljs" data-lang="plenty">&lt;div class="vat-change mb-2" v-if="!$store.state.basket.data.isExportDelivery &amp;&amp; !$store.state.basket.showNetPrices"&gt;{{ Twig.print('trans("Ceres::Template.itemInclVAT")') }}&lt;/div&gt;
&lt;div class="vat-change mb-2" v-if="!$store.state.basket.data.isExportDelivery &amp;&amp; $store.state.basket.showNetPrices"&gt;{{ Twig.print('trans("Ceres::Template.itemExclVAT")') }}&lt;/div&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Durch diese Anpassung wird der Text, der in der Mehrsprachigkeit in den Einträgen <strong>itemInclVAT</strong> und <strong>itemExclVAT</strong> hinterlegt sind, auch in der Warenkorbvorschau von Headern angezeigt, die ihr selbst im ShopBuilder bearbeitet habt.<br></p>
</div>
<div class="paragraph">
<p>Alternativ hast du die Möglichkeit, die Warenkorbvorschau über die Einstellungen des Top Bar-Widgets komplett auszublenden. Dadurch würdest du dir diese eine Template-Anpassung sparen.</p>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-note" title="Anmerkung"></i>
</td>
<td class="content">
<div class="paragraph">
<p>Sowohl das <strong>Reparieren</strong> des Ceres-Plugins als auch ein Update des Ceres-Plugins machen diese Template-Anpassungen wieder rückgängig.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div>
</div><div class="sect1 adoc">
<h2 id="psi">11. Bessere Werte bei Google Page Speed Insights erzielen</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In diesem Best Practice lernst du, auf welche Dinge du achten musst, um deine Performance-Werte bei <a href="https://developers.google.com/speed/pagespeed/insights/?hl=de">Google Page Speed Insights</a> zu verbessern. Im ersten Schritt zeigen wir dir, wie du mit den Mitteln, die plentyShop Ceres bereits mitbringt, höhere PSI-Werte erzielen kannst. Zu einem späteren Zeitpunkt wird diese Anleitung auch Anpassungen enthalten, die du mit einem eigenen Theme umsetzen kannst, um von Google PSI besser bewertet zu werden. Die hier aufgeführten Maßnahmen erfordern keinerlei Programmierungskenntnisse.</p>
</div>
<div class="admonitionblock important">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-important" title="Wichtig"></i>
</td>
<td class="content">
<div class="paragraph">
<p>Die Maßnahmen, die wir hier vorschlagen, können deinen PSI-Wert nur in einem bedingten Maß verbessern. Mit dem Release von plentyShop Ceres 6.0 werden wir eine Reihe von Änderungen vornehmen, die sich positiv auf deine PSI-Werte auswirken werden. Wir sind bemüht, die Performance von plentyShop Ceres in jeder Version weiter zu verbessern.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="paragraph">
<p>Im Folgenden sind einige Anpassungen aufgeführt, die du für deinen plentyShop durchführen kannst, um die von Google erfassten Werte zu verbessern:</p>
</div>
<div class="sect2">
<h3 id="_live_modus_im_ceres_plugin_aktivieren">11.1. Live-Modus im Ceres-Plugin aktivieren</h3>
<div class="paragraph">
<p>Im Plugin Ceres hast du die Möglichkeit, zwischen dem <strong>Entwicklungsmodus</strong> und dem <strong>Live-Modus</strong> zu wählen. Im Entwicklungsmodus kannst du Debugging-Optionen nutzen und die Dateien des Plugins werden nicht minimiert und gebündelt, was sich negativ auf die Webshop-Performance auswirkt. Wir raten dir daher, den Live-Modus zu verwenden, um deinen Webshop performanter zu machen. Gehe wir im Folgenden beschrieben vor, um den Live-Modus zu aktivieren:</p>
</div>
<div class="paragraph instruction">
<p>Live-Modus aktivieren:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Plugins » Plugin-Set-Übersicht</strong>.<br></p>
</li>
<li>
<p>Wähle das Plugin-Set aus deines Webshops aus.</p>
</li>
<li>
<p>Klicke auf <strong>Plugin-Set bearbeiten</strong>.</p>
</li>
<li>
<p>Klicke in der Zeile des Plugins Ceres auf <span class="icon darkGrey"><i class="fa fa-cog  "></i></span> <strong>Einstellungen</strong>.
→ Die Ceres-Einstellungen werden geöffnet.</p>
</li>
<li>
<p>Klicke auf das Tab <strong>Logging und Performance</strong>.</p>
</li>
<li>
<p>Wähle für die Einstellung <strong>Performance-Level</strong> die Option <strong>Live-Modus</strong>.</p>
</li>
<li>
<p><strong>Speichere</strong> (<span class="icon green"><i class="fa fa-save  "></i></span>) die Einstellungen.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Dadurch, dass du diese Einstellung aktiviert hast, werden die Ceres-Dateien gebündelt und minimiert, was zu einer schnelleren Auslieferungszeit der Seiten im Webshop führt.</p>
</div>
</div>
<div class="sect2">
<h3 id="_bilder_widgets_optimal_einstellen">11.2. Bilder-Widgets optimal einstellen</h3>
<div class="paragraph">
<p>Bilddateien sind eine der größeren Problemquellen für einen performanten Webshop. Du solltest also darauf achten, dass du nur so viele Bilder-Widgets in deinen Seiten verbaust, wie für deine Zwecke nötig sind. Eine geringere Zahl von Bilder-Widgets wird sich positiv auf die Webshop-Geschwindigkeit auswirken.<br></p>
</div>
<div class="sect3">
<h4 id="_moderne_bildformate_verwenden">11.2.1. Moderne Bildformate verwenden</h4>
<div class="paragraph">
<p>Darüber hinaus raten wir dir, die Bilder, die du im Webshop anzeigen willst, in möglichst modernen Bildformaten abzulegen. Wir empfehlen dir, in den Widgets <strong>Bilderbox</strong>, <strong>Bilderkarussell</strong> und <strong>Hintergrundbild</strong> das Feld <strong>Bildauswahl</strong> zu nutzen, um dort Bilder im <strong>WebP-Format</strong> zu hinterlegen. Wenn du eine WebP-Datei nutzt, wird dir zusätzlich die Option <strong>Bildauswahl für ältere Browser</strong> eingeblendet, um Bilder auch in Browsern anzuzeigen, die bisher keine WebP-Formate unterstützen. Dort solltest du nach Möglichkeit das Format JPEG verwenden.<br></p>
</div>
</div>
<div class="sect3">
<h4 id="_lazy_loading_aktivieren">11.2.2. Lazy Loading aktivieren</h4>
<div class="paragraph">
<p>Weiterhin emfehlen wir dir, für sämtliche Widgets, die Bilder beinhalten, die Option <strong>Nur sichtbare Inhalte laden</strong> in den Widget-Einstellungen zu aktivieren. Diese Option, das sogenannte "Lazy Loading", sorgt dafür, dass die Bilddateien, die sich beim ersten Aufruf der Seite nicht im aktuellen Sichtbereich befindet, zu einem späteren Zeitpunkt nachgeladen wird. Dies wirkt sich positiv auf die Performance des Webshops aus.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_anzahl_der_widgets_reduzieren">11.3. Anzahl der Widgets reduzieren</h3>
<div class="paragraph">
<p>Die Zahl der Widgets, die du auf deinen Webshop-Seiten verbaust, können die Performance deines Webshops negativ beeinflussen: Je mehr Widgets du pro Seite nutzt, desto langsamer lädt diese Seite. Dies gilt insbesondere für Bilder-Widgets und für Widgets, die eine große Menge an Artikeldaten enthalten. Jedes zusätzliche Widget beinträchtigt die Zeit bis zur ersten vollständigen Interaktivität der Seite.<br>
Wir empfehlen dir daher, nur so viele Widgets pro Seite zu verwenden, wie für deine Zwecke nötig sind. Vor allem auf Kategorieseiten, auf denen große Datenmengen und komplexes Javascript geladen werden muss, solltest du, wenn möglich, die Anzahl der dargestellten Artikel reduzieren und dadurch die Ladezeit verbessern.</p>
</div>
</div>
<div class="sect2">
<h3 id="_unsichtbaren_text_durch_eigene_schriftarten_vermeiden">11.4. Unsichtbaren Text durch eigene Schriftarten vermeiden</h3>
<div class="paragraph">
<p>Falls du eigene Schriftarten einbindest, ohne dabei auf die Design-Einstellungen des ShopBuilders zurückzugreifen, kann es dazu kommen, dass manche Browser versuchen, den Text darzustellen, bevor die betroffene Font-Datei geladen wurde. Dadurch kommt es zu einem sogenannten <strong>Flash of invisible text (FOIT)</strong>, also einer kurzen Zeit, in der der darzustellende Text vom Browser nicht angezeigt werden kann.<br>
Um dies zu vermeiden, kannst du über eine CSS-Anweisung vorübergehend eine Systemschriftart anzeigen lassen, bis die betroffene Schriftart geladen wurde. Dazu fügst du in deinem eigenen CSS (beispielsweise über das Plugin <a href="https://marketplace.plentymarkets.com/plugins/storefront/widgets/cfourcustomcssjs_5143">Custom CSS/JS im Frontend</a>) die Anweisung <strong>font-display: swap</strong> in deinen <strong>@font-face</strong> Styles ein. Dadurch vermeidest du unangenehme FOIT, was sich positiv auf den PSI-Wert deines Webshops auswirkt.</p>
</div>
</div>
<div class="sect2">
<h3 id="_shopbooster_aktivieren">11.5. ShopBooster aktivieren</h3>
<div class="paragraph">
<p>Die Time-to-first-Byte (TTFB) ist ebenfalls Bestandteil der PSI-Erfassung, auch wenn sie nur einen geringen Teil der Wertung darstellt. Um deine TTFB zu verbessern, kannst du für deinen plentyShop Ceres das kostenpflichtige Zusatzmodul ShopBooster aktivieren. Dadurch werden Seiteninhalte von Ceres Webshops bei einem zweiten Aufruf in den Cache geschrieben, um dadurch deutlich bessere Ladezeiten für deine Nutzer:innen zu erzielen.</p>
</div>
<div class="admonitionblock important">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-important" title="Wichtig"></i>
</td>
<td class="content">
<div class="title">Zusätzliche Kosten</div>
<div class="paragraph">
<p>Durch das Aktivieren des ShopBoosters fallen <strong>pro Mandant</strong> zusätzliche Kosten in Höhe von 0,004 € pro 100 Seitenaufrufe und -änderungen an. Ein Seitenaufruf ist der Vorgang, bei dem ein Shop-Besucher oder ein Webcrawler eine URL des Online-Shops aufruft; eine Seitenänderung wird durch folgende Vorgänge ausgelöst:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Aktualisieren von Kategorien- und Artikeldaten</p>
</li>
<li>
<p>Aktualisieren von ShopBuilder-Seiten</p>
</li>
<li>
<p>Bereitstellen von Plugins</p>
</li>
<li>
<p>Speichern von Einstellungen in der Ceres Konfiguration</p>
</li>
<li>
<p>Invalidieren des Caches bei Deaktivierung des ShopBoosters</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Die Zusatzkosten des ShopBoosters betragen monatlich <strong>maximal</strong> 100€ pro Mandant.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class="paragraph instruction">
<p>ShopBooster aktivieren:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Einrichtung » Mandant » Mandant wählen » Webshop » ShopBooster</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>ShopBooster aktivieren</strong>.<br>
→ Ein Fenster öffnet sich, welches dich auf entsprechende zusätzliche Kosten hinweist.</p>
</li>
<li>
<p>Klicke auf <strong>Bestätigen</strong> um den ShopBooster zu aktivieren.<br>
→ Die Meldung <strong>ShopBooster wurde aktiviert</strong> wird eingeblendet.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Auf die gleiche Weise kannst du den ShopBooster wieder deaktivieren.</p>
</div>
<div class="paragraph instruction">
<p>ShopBooster deaktivieren:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Öffne das Menü <strong>Einrichtung » Mandant » Mandant wählen » Webshop » ShopBooster</strong>.</p>
</li>
<li>
<p>Klicke auf <strong>ShopBooster deaktivieren</strong>.<br>
→ Ein Fenster öffnet sich, welches dich auf zusätzliche Kosten hinweist.</p>
</li>
<li>
<p>Klicke auf <strong>Bestätigen</strong> um den ShopBooster zu deaktivieren.<br>
→ Die Meldung <strong>ShopBooster wurde deaktiviert</strong> wird eingeblendet.</p>
</li>
</ol>
</div>
</div>
<div class="sect2">
<h3 id="_javascript_in_code_widgets_vermeiden">11.6. Javascript in Code-Widgets vermeiden</h3>
<div class="paragraph">
<p>Im ShopBuilder steht dir ein Code-Widget zur Verfügung, über das du zusätzliche Anpassungen vornehmen kannst, die der ShopBuilder nicht von selbst bereitstellt. Wenn du eigenen Code einbinden möchtest, raten wir dir dazu, eigenes Javascript nicht über Code-Widgets zu realisieren, sondern beispielsweise über das Plugin <a href="https://marketplace.plentymarkets.com/plugins/storefront/widgets/cfourcustomcssjs_5143">Custom CSS/JS im Frontend</a> oder ein eigenes Theme. Zusätzliches Javascript in Code-Widgets zu verarbeiten, wirkt sich negativ auf die Ladezeit der Seite aus.<br>
Falls du eigenes Javascript über ein Plugin oder ein Theme einbindest, empfehlen wir dir, das Javascript ganz am Ende des HTML-Body zu verbauen.</p>
</div>
</div>
<div class="sect2">
<h3 id="_plugins_für_zahlungsarten_richtig_verknüpfen">11.7. Plugins für Zahlungsarten richtig verknüpfen</h3>
<div class="paragraph">
<p>Wenn du Plugin-Zahlungsarten für deinen plentyShop verwendest, die eine große Menge an eigenen Daten beinhalten, wie beispielsweise AmazonPay oder PayPal, ist es für die Performance deines Webshops unerlässlich, dass du diese Plugins mit den richtigen Layout-Containern verknüpfst. In Ceres 5.0 wurden neue Layout-Container hinzugefügt, um Javascript und CSS der Zahlungsplugins nur an den Stellen zu laden, an denen sie wirklich gebraucht werden.<br>
Die Plugin-Beschreibungen der jeweiligen Zahlungsarten, z.B. <a href="https://marketplace.plentymarkets.com/paypal_4690#80.">PayPal</a>, enthalten bereits detaillierte Anleitungen, wie du die Plugins mit den richtigen Containern verknüpfst. Generell gilt, dass du das Javascript der jeweiligen Zahlungsart mit dem Container <strong>Checkout.AfterScriptsLoaded</strong> und nicht mehr mit dem Container <strong>ScriptLoade.AfterScriptsLoaded</strong> verknüpfen solltest, um die Performance deines Webshops zu verbessern.</p>
</div>
</div>
</div>
</div>
</main>