<aside class="plenty-anchor-navbar">
    <div class="sticky-wrapper">
        <div class="sticky-container" data-fn="sticky-container" data-fn-options="{ onLoadHashScrollToLink: true }">
            
        </div>
    </div>
</aside>

<main id="main">
    <h1>Loop - Das zyklische Steuerelement</h1><table class="tableblock frame-all grid-none stretch">
<colgroup>
<col style="width: 66.6666%;">
<col style="width: 33.3334%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Ein einfacher Prozess gibt dir einen ersten Eindruck der Funktion des Steuerelements Loop. In einem komplexeren Prozess zeigen wir dann das ganze Potenzial dieses Steuerelements.</p></td>
<td class="tableblock halign-left valign-top"></td>
</tr>
</tbody>
</table><div class="videoblock">
<div class="content">
<iframe src="https://player.vimeo.com/video/231661904" frameborder="0" allowfullscreen=""></iframe>
</div>
</div><div class="openblock collapseBox">
<div class="title">Transkript</div>
<div class="content">
<div class="paragraph">
<p>Dass Dr. Prozess über eine großes Arsenal an Superfähigkeiten verfügt weißt du bereits. Der Loop ist eine dieser Fähigkeiten. Vereinfacht gesagt stellt der Loop eine Schleife dar, der eine Aktion oder Aktionskette so oft wiederholt, bis alle Elemente wie z.B. Aufträge den Prozess bzw. den Abschnitt durchlaufen haben.</p>
</div>
<div class="paragraph">
<p>Natürlich ist dieser Prozess nicht besonders realistisch. Ich zeige dir aber auch noch, wie der Loop in einem komplexeren Beispiel verbaut ist. Zuerst beschäftigen wir uns aber mit der Idee, die hinter dem Loop steht, also welche Aufgabe hat jetzt ein Loop?</p>
</div>
<div class="paragraph">
<p>Wie du siehst habe ich bereits einen Arbeitsschritt angelegt. Er bearbeitet 50 Aufträge im Status 5. Der Status der Aufträgen wird auf Status 6 geändert. Der Prozess spielt einen Sound ab und zeigt einen Hinweis für jeden Auftrag an. Bei der Nutzung von Loops ist es immer wichtig, dass du auch einen Jump benutzt, damit du die Schleife läuft. Wenn alle Aufträge von Status 5 in Status 6 geändert wurden ist der Loop beendet. Am besten starten wir einfach den Prozess um zu sehen, was passiert. Ziemlich simpel, wie du siehst.</p>
</div>
<div class="paragraph">
<p>Schauen wir uns doch einen Loop in einem komplexeren Zusammenhang an. Wie du siehst sind in diesem Prozess sogar zwei Loops verbaut. Interessant ist, dass hier der eine Loop in den anderen Loop integriert ist. Hier bezieht sich der erste Loop auf den gesamten Prozess und der zweite bezieht sich auf die einzelne Elemente.</p>
</div>
<div class="paragraph">
<p>In diesem zweiten Loop werden Seriennummer erfasst. Dein System wird so nach Aufträge mit der jeweiligen Seriennummer durchsucht oder besser gesagt gefiltert. Kann keine Seriennummer gefunden werden wird zum Start gesprungen und der Loop erneut durchlaufen. Wenn Artikel mit Seriennummern gefunden werden, wird der Prozess hier fortgesetzt und die Seriennummer wird registriert. Der letzte Jump bringt uns dann wieder zurück. Haben die Aufträge den Loop durchlaufen werden sie nacheinander im Versand-Center für den Versand angemeldet. Der Loop wird durchlaufen solang bis alle Seriennummern in diesem Stapel registriert wurden.</p>
</div>
<div class="paragraph">
<p>Dr. Prozess' Superloop - Wenn du diese spezielle zyklische Komponente in deinem plentymarkets-Prozess benötigst.</p>
</div>
</div>
</div>
</main>